{"ast":null,"code":"var _jsxFileName = \"/home/dmytro/react-redux-posts/src/features/posts/AddPostForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postAdded } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPostForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const users = useSelector(selectAllUsers);\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const onAuthorChanged = e => setUserId(e.target.value);\n\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded(title, content, userId));\n      setTitle(\"\");\n      setContent(\"\");\n    }\n  };\n\n  const canSave = Boolean(title) && Boolean(content) && Boolean(userId);\n  const usersOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postAuthor\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"postAuthor\",\n        value: userId,\n        onChange: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), usersOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"6\",\n        name: \"postContent\",\n        id: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !canSave,\n        onClick: onSavePostClicked,\n        type: \"button\",\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPostForm, \"xhNCmoOfXV8pfg78nTJCrofpLcA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddPostForm;\nexport default AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/src/features/posts/AddPostForm.js"],"names":["useState","useDispatch","useSelector","postAdded","selectAllUsers","AddPostForm","dispatch","title","setTitle","content","setContent","userId","setUserId","users","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","onSavePostClicked","canSave","Boolean","usersOptions","map","user","id","name"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { postAdded } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\n\nconst AddPostForm = () => {\n  const dispatch = useDispatch();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n\n  const users = useSelector(selectAllUsers);\n\n  const onTitleChanged = (e) => setTitle(e.target.value);\n  const onContentChanged = (e) => setContent(e.target.value);\n  const onAuthorChanged = (e) => setUserId(e.target.value);\n\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded(title, content, userId));\n      setTitle(\"\");\n      setContent(\"\");\n    }\n  };\n\n  const canSave = Boolean(title) && Boolean(content) && Boolean(userId);\n\n  const usersOptions = users.map((user) => (\n    <option key={user.id} value={user.id}>\n      {user.name}\n    </option>\n  ));\n\n  return (\n    <section>\n      <h2>Add a New Post</h2>\n      <form>\n        <label htmlFor=\"postTitle\">Post Title:</label>\n        <input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n        <label htmlFor=\"postAuthor\">Author:</label>\n        <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n          <option value=\"\"></option>\n          {usersOptions}\n        </select>\n        <label htmlFor=\"postContent\">Content:</label>\n        <textarea\n          rows=\"6\"\n          name=\"postContent\"\n          id=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        ></textarea>\n        <button disabled={!canSave} onClick={onSavePostClicked} type=\"button\">\n          Save Post\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default AddPostForm;\n"]},"metadata":{},"sourceType":"module"}