{"ast":null,"code":"import _toConsumableArray from\"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{configureStore,getDefaultMiddleware}from'@reduxjs/toolkit';import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';import storage from'redux-persist/lib/storage';import{authReducer}from'./auth/slice';import{contactsReducer}from'./contacts/contactsSlice';import{filtringReducer}from'./contacts/filterSlice';var middleware=_toConsumableArray(getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}}));// Persisting token field from auth slice to localstorage\nvar authPersistConfig={key:'auth',storage:storage,whitelist:['token']};export var store=configureStore({reducer:{auth:persistReducer(authPersistConfig,authReducer),contacts:contactsReducer,filter:filtringReducer},middleware:middleware,devTools:process.env.NODE_ENV==='development'});export var persistor=persistStore(store);","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","authReducer","contactsReducer","filtringReducer","middleware","serializableCheck","ignoredActions","authPersistConfig","key","whitelist","store","reducer","auth","contacts","filter","devTools","process","env","NODE_ENV","persistor"],"mappings":"4HAAA,OAASA,cAAT,CAAyBC,oBAAzB,KAAqD,kBAArD,CACA,OACEC,YADF,CAEEC,cAFF,CAGEC,KAHF,CAIEC,SAJF,CAKEC,KALF,CAMEC,OANF,CAOEC,KAPF,CAQEC,QARF,KASO,eATP,CAUA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,OAASC,WAAT,KAA4B,cAA5B,CACA,OAASC,eAAT,KAAgC,0BAAhC,CACA,OAASC,eAAT,KAAgC,wBAAhC,CAEA,GAAMC,CAAAA,UAAU,oBACXb,oBAAoB,CAAC,CACtBc,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAACZ,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADC,CADG,CAAD,CADT,CAAhB,CAQA;AACA,GAAMQ,CAAAA,iBAAiB,CAAG,CACxBC,GAAG,CAAE,MADmB,CAExBR,OAAO,CAAPA,OAFwB,CAGxBS,SAAS,CAAE,CAAC,OAAD,CAHa,CAA1B,CAMA,MAAO,IAAMC,CAAAA,KAAK,CAAGpB,cAAc,CAAC,CAClCqB,OAAO,CAAE,CACPC,IAAI,CAAEnB,cAAc,CAACc,iBAAD,CAAoBN,WAApB,CADb,CAEPY,QAAQ,CAAEX,eAFH,CAGPY,MAAM,CAAEX,eAHD,CADyB,CAMlCC,UAAU,CAAVA,UANkC,CAOlCW,QAAQ,CAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAPD,CAAD,CAA5B,CAUP,MAAO,IAAMC,CAAAA,SAAS,CAAG3B,YAAY,CAACkB,KAAD,CAA9B","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth/slice';\nimport { contactsReducer } from './contacts/contactsSlice';\nimport { filtringReducer } from './contacts/filterSlice';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\n// Persisting token field from auth slice to localstorage\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n    filter: filtringReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n\n"]},"metadata":{},"sourceType":"module"}