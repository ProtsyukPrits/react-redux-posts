{"ast":null,"code":"\"use strict\";\n\nexports.setISOWeekYear = setISOWeekYear;\n\nvar _index = require(\"./constructFrom.js\");\n\nvar _index2 = require(\"./differenceInCalendarDays.js\");\n\nvar _index3 = require(\"./startOfISOWeekYear.js\");\n\nvar _index4 = require(\"./toDate.js\");\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param weekYear - The ISO week-numbering year of the new date\n *\n * @returns The new date with the ISO week-numbering year set\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * const result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\n\n\nfunction setISOWeekYear(date, weekYear) {\n  let _date = (0, _index4.toDate)(date);\n\n  const diff = (0, _index2.differenceInCalendarDays)(_date, (0, _index3.startOfISOWeekYear)(_date));\n  const fourthOfJanuary = (0, _index.constructFrom)(date, 0);\n  fourthOfJanuary.setFullYear(weekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  _date = (0, _index3.startOfISOWeekYear)(fourthOfJanuary);\n\n  _date.setDate(_date.getDate() + diff);\n\n  return _date;\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/setISOWeekYear.js"],"names":["exports","setISOWeekYear","_index","require","_index2","_index3","_index4","date","weekYear","_date","toDate","diff","differenceInCalendarDays","startOfISOWeekYear","fourthOfJanuary","constructFrom","setFullYear","setHours","setDate","getDate"],"mappings":"AAAA;;AACAA,OAAO,CAACC,cAAR,GAAyBA,cAAzB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,+BAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,yBAAD,CAArB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,aAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,cAAT,CAAwBM,IAAxB,EAA8BC,QAA9B,EAAwC;AACtC,MAAIC,KAAK,GAAG,CAAC,GAAGH,OAAO,CAACI,MAAZ,EAAoBH,IAApB,CAAZ;;AACA,QAAMI,IAAI,GAAG,CAAC,GAAGP,OAAO,CAACQ,wBAAZ,EACXH,KADW,EAEX,CAAC,GAAGJ,OAAO,CAACQ,kBAAZ,EAAgCJ,KAAhC,CAFW,CAAb;AAIA,QAAMK,eAAe,GAAG,CAAC,GAAGZ,MAAM,CAACa,aAAX,EAA0BR,IAA1B,EAAgC,CAAhC,CAAxB;AACAO,EAAAA,eAAe,CAACE,WAAhB,CAA4BR,QAA5B,EAAsC,CAAtC,EAAyC,CAAzC;AACAM,EAAAA,eAAe,CAACG,QAAhB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;AACAR,EAAAA,KAAK,GAAG,CAAC,GAAGJ,OAAO,CAACQ,kBAAZ,EAAgCC,eAAhC,CAAR;;AACAL,EAAAA,KAAK,CAACS,OAAN,CAAcT,KAAK,CAACU,OAAN,KAAkBR,IAAhC;;AACA,SAAOF,KAAP;AACD","sourcesContent":["\"use strict\";\nexports.setISOWeekYear = setISOWeekYear;\nvar _index = require(\"./constructFrom.js\");\nvar _index2 = require(\"./differenceInCalendarDays.js\");\nvar _index3 = require(\"./startOfISOWeekYear.js\");\nvar _index4 = require(\"./toDate.js\");\n\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param weekYear - The ISO week-numbering year of the new date\n *\n * @returns The new date with the ISO week-numbering year set\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * const result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\nfunction setISOWeekYear(date, weekYear) {\n  let _date = (0, _index4.toDate)(date);\n  const diff = (0, _index2.differenceInCalendarDays)(\n    _date,\n    (0, _index3.startOfISOWeekYear)(_date),\n  );\n  const fourthOfJanuary = (0, _index.constructFrom)(date, 0);\n  fourthOfJanuary.setFullYear(weekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  _date = (0, _index3.startOfISOWeekYear)(fourthOfJanuary);\n  _date.setDate(_date.getDate() + diff);\n  return _date;\n}\n"]},"metadata":{},"sourceType":"script"}