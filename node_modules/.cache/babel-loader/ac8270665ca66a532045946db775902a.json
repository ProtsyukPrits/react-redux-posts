{"ast":null,"code":"import _objectSpread from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"spacing\", \"children\"];\n// ../../../react-shim.js\nimport React from \"react\"; // src/switch.tsx\n\nimport { useCheckbox } from \"@chakra-ui/checkbox\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\"; // ../../utilities/shared-utils/src/index.ts\n\nvar cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\n\nvar dataAttr = function dataAttr(condition) {\n  return condition ? \"\" : void 0;\n}; // src/switch.tsx\n\n\nimport { useMemo } from \"react\";\nvar Switch = forwardRef(function Switch2(props, ref) {\n  var styles = useMultiStyleConfig(\"Switch\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      _omitThemingProps$spa = _omitThemingProps.spacing,\n      spacing = _omitThemingProps$spa === void 0 ? \"0.5rem\" : _omitThemingProps$spa,\n      children = _omitThemingProps.children,\n      ownProps = _objectWithoutProperties(_omitThemingProps, _excluded);\n\n  var _useCheckbox = useCheckbox(ownProps),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getRootProps = _useCheckbox.getRootProps,\n      getLabelProps = _useCheckbox.getLabelProps;\n\n  var containerStyles = useMemo(function () {\n    return _objectSpread({\n      display: \"inline-block\",\n      position: \"relative\",\n      verticalAlign: \"middle\",\n      lineHeight: 0\n    }, styles.container);\n  }, [styles.container]);\n  var trackStyles = useMemo(function () {\n    return _objectSpread({\n      display: \"inline-flex\",\n      flexShrink: 0,\n      justifyContent: \"flex-start\",\n      boxSizing: \"content-box\",\n      cursor: \"pointer\"\n    }, styles.track);\n  }, [styles.track]);\n  var labelStyles = useMemo(function () {\n    return _objectSpread({\n      userSelect: \"none\",\n      marginStart: spacing\n    }, styles.label);\n  }, [spacing, styles.label]);\n  return /* @__PURE__ */React.createElement(chakra.label, _objectSpread(_objectSpread({}, getRootProps()), {}, {\n    className: cx(\"chakra-switch\", props.className),\n    __css: containerStyles\n  }), /* @__PURE__ */React.createElement(\"input\", _objectSpread({\n    className: \"chakra-switch__input\"\n  }, getInputProps({}, ref))), /* @__PURE__ */React.createElement(chakra.span, _objectSpread(_objectSpread({}, getCheckboxProps()), {}, {\n    className: \"chakra-switch__track\",\n    __css: trackStyles\n  }), /* @__PURE__ */React.createElement(chakra.span, {\n    __css: styles.thumb,\n    className: \"chakra-switch__thumb\",\n    \"data-checked\": dataAttr(state.isChecked),\n    \"data-hover\": dataAttr(state.isHovered)\n  })), children && /* @__PURE__ */React.createElement(chakra.span, _objectSpread(_objectSpread({\n    className: \"chakra-switch__label\"\n  }, getLabelProps()), {}, {\n    __css: labelStyles\n  }), children));\n});\nSwitch.displayName = \"Switch\";\nexport { Switch };","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/@chakra-ui/switch/dist/index.esm.js"],"names":["React","useCheckbox","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","cx","classNames","filter","Boolean","join","dataAttr","condition","useMemo","Switch","Switch2","props","ref","styles","spacing","children","ownProps","state","getInputProps","getCheckboxProps","getRootProps","getLabelProps","containerStyles","display","position","verticalAlign","lineHeight","container","trackStyles","flexShrink","justifyContent","boxSizing","cursor","track","labelStyles","userSelect","marginStart","label","createElement","className","__css","span","thumb","isChecked","isHovered","displayName"],"mappings":"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","sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/switch.tsx\nimport { useCheckbox } from \"@chakra-ui/checkbox\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\n\n// src/switch.tsx\nimport { useMemo } from \"react\";\nvar Switch = forwardRef(function Switch2(props, ref) {\n  const styles = useMultiStyleConfig(\"Switch\", props);\n  const { spacing = \"0.5rem\", children, ...ownProps } = omitThemingProps(props);\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getRootProps,\n    getLabelProps\n  } = useCheckbox(ownProps);\n  const containerStyles = useMemo(() => ({\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\",\n    lineHeight: 0,\n    ...styles.container\n  }), [styles.container]);\n  const trackStyles = useMemo(() => ({\n    display: \"inline-flex\",\n    flexShrink: 0,\n    justifyContent: \"flex-start\",\n    boxSizing: \"content-box\",\n    cursor: \"pointer\",\n    ...styles.track\n  }), [styles.track]);\n  const labelStyles = useMemo(() => ({\n    userSelect: \"none\",\n    marginStart: spacing,\n    ...styles.label\n  }), [spacing, styles.label]);\n  return /* @__PURE__ */ React.createElement(chakra.label, {\n    ...getRootProps(),\n    className: cx(\"chakra-switch\", props.className),\n    __css: containerStyles\n  }, /* @__PURE__ */ React.createElement(\"input\", {\n    className: \"chakra-switch__input\",\n    ...getInputProps({}, ref)\n  }), /* @__PURE__ */ React.createElement(chakra.span, {\n    ...getCheckboxProps(),\n    className: \"chakra-switch__track\",\n    __css: trackStyles\n  }, /* @__PURE__ */ React.createElement(chakra.span, {\n    __css: styles.thumb,\n    className: \"chakra-switch__thumb\",\n    \"data-checked\": dataAttr(state.isChecked),\n    \"data-hover\": dataAttr(state.isHovered)\n  })), children && /* @__PURE__ */ React.createElement(chakra.span, {\n    className: \"chakra-switch__label\",\n    ...getLabelProps(),\n    __css: labelStyles\n  }, children));\n});\nSwitch.displayName = \"Switch\";\nexport {\n  Switch\n};\n"]},"metadata":{},"sourceType":"module"}