{"ast":null,"code":"import _classCallCheck from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\"; // in the morning, in the afternoon, in the evening, at night\n\nexport var DayPeriodParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DayPeriodParser, _Parser);\n\n  var _super = _createSuper(DayPeriodParser);\n\n  function DayPeriodParser() {\n    var _this;\n\n    _classCallCheck(this, DayPeriodParser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 80);\n\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", [\"a\", \"b\", \"t\", \"T\"]);\n\n    return _this;\n  }\n\n  _createClass(DayPeriodParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case \"B\":\n        case \"BB\":\n        case \"BBB\":\n          return match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n\n        case \"BBBBB\":\n          return match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n\n        case \"BBBB\":\n        default:\n          return match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  }]);\n\n  return DayPeriodParser;\n}(Parser);","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.mjs"],"names":["Parser","dayPeriodEnumToHours","DayPeriodParser","dateString","token","match","dayPeriod","width","context","date","_flags","value","setHours"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,oBAAT,QAAqC,cAArC,C,CAEA;;AACA,WAAaC,eAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,+DACa,EADb;;AAAA,yEAgDuB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAhDvB;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAGE,eAAMC,UAAN,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgC;AAC9B,cAAQD,KAAR;AACE,aAAK,GAAL;AACA,aAAK,IAAL;AACA,aAAK,KAAL;AACE,iBACEC,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AAC1BI,YAAAA,KAAK,EAAE,aADmB;AAE1BC,YAAAA,OAAO,EAAE;AAFiB,WAA5B,KAIAH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AAC1BI,YAAAA,KAAK,EAAE,QADmB;AAE1BC,YAAAA,OAAO,EAAE;AAFiB,WAA5B,CALF;;AAWF,aAAK,OAAL;AACE,iBAAOH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AACjCI,YAAAA,KAAK,EAAE,QAD0B;AAEjCC,YAAAA,OAAO,EAAE;AAFwB,WAA5B,CAAP;;AAIF,aAAK,MAAL;AACA;AACE,iBACEH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AAC1BI,YAAAA,KAAK,EAAE,MADmB;AAE1BC,YAAAA,OAAO,EAAE;AAFiB,WAA5B,KAIAH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AAC1BI,YAAAA,KAAK,EAAE,aADmB;AAE1BC,YAAAA,OAAO,EAAE;AAFiB,WAA5B,CAJA,IAQAH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AAC1BI,YAAAA,KAAK,EAAE,QADmB;AAE1BC,YAAAA,OAAO,EAAE;AAFiB,WAA5B,CATF;AAtBJ;AAqCD;AAzCH;AAAA;AAAA,WA2CE,aAAIC,IAAJ,EAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACvBF,MAAAA,IAAI,CAACG,QAAL,CAAcX,oBAAoB,CAACU,KAAD,CAAlC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD;AACA,aAAOF,IAAP;AACD;AA9CH;;AAAA;AAAA,EAAqCT,MAArC","sourcesContent":["import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n"]},"metadata":{},"sourceType":"module"}