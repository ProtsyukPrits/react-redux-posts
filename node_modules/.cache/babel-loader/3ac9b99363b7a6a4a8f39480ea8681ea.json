{"ast":null,"code":"import ContactEl from'components/ContactEl';import{useDispatch,useSelector}from'react-redux';import{deleteContact}from'redux/contacts/operations';import{selectContacts,selectFilter}from'redux/contacts/selectors';import{Items}from'./ContactList.styled';import{jsx as _jsx}from\"react/jsx-runtime\";var ContactList=function ContactList(){var contacts=useSelector(selectContacts);var filter=useSelector(selectFilter);var dispatch=useDispatch();var filtringContacts=contacts.filter(function(contact){return contact.name.toLowerCase().includes(filter);});return/*#__PURE__*/_jsx(Items,{children:filtringContacts.map(function(contact){return/*#__PURE__*/_jsx(ContactEl,{contact:contact,onDelete:function onDelete(){return dispatch(deleteContact(contact.id));}},contact.id);})});};export default ContactList;","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/src/components/ContactList/ContactList.jsx"],"names":["ContactEl","useDispatch","useSelector","deleteContact","selectContacts","selectFilter","Items","ContactList","contacts","filter","dispatch","filtringContacts","contact","name","toLowerCase","includes","map","id"],"mappings":"AACA,MAAOA,CAAAA,SAAP,KAAsB,sBAAtB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,aAAT,KAA8B,2BAA9B,CACA,OAASC,cAAT,CAAyBC,YAAzB,KAA6C,0BAA7C,CACA,OAASC,KAAT,KAAsB,sBAAtB,C,2CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,CAACE,cAAD,CAA5B,CACA,GAAMK,CAAAA,MAAM,CAAGP,WAAW,CAACG,YAAD,CAA1B,CAEA,GAAMK,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEA,GAAMU,CAAAA,gBAAgB,CAAGH,QAAQ,CAACC,MAAT,CAAgB,SAAAG,OAAO,QAC9CA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCN,MAApC,CAD8C,EAAvB,CAAzB,CAIA,mBACE,KAAC,KAAD,WACGE,gBAAgB,CAACK,GAAjB,CAAqB,SAAAJ,OAAO,qBAC3B,KAAC,SAAD,EACE,OAAO,CAAEA,OADX,CAGE,QAAQ,CAAE,0BAAMF,CAAAA,QAAQ,CAACP,aAAa,CAACS,OAAO,CAACK,EAAT,CAAd,CAAd,EAHZ,EAEOL,OAAO,CAACK,EAFf,CAD2B,EAA5B,CADH,EADF,CAWD,CArBD,CA2BA,cAAeV,CAAAA,WAAf","sourcesContent":["import { PropTypes } from 'prop-types';\nimport ContactEl from 'components/ContactEl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { Items } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const filtringContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <Items>\n      {filtringContacts.map(contact => (\n        <ContactEl\n          contact={contact}\n          key={contact.id}\n          onDelete={() => dispatch(deleteContact(contact.id))}\n        />\n      ))}\n    </Items>\n  );\n};\n\nContactList.propTypes = {\n  filtringContacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}