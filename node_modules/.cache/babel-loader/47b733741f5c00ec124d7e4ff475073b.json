{"ast":null,"code":"\"use strict\";\n\nexports.intervalToDuration = intervalToDuration;\n\nvar _index = require(\"./add.js\");\n\nvar _index2 = require(\"./differenceInDays.js\");\n\nvar _index3 = require(\"./differenceInHours.js\");\n\nvar _index4 = require(\"./differenceInMinutes.js\");\n\nvar _index5 = require(\"./differenceInMonths.js\");\n\nvar _index6 = require(\"./differenceInSeconds.js\");\n\nvar _index7 = require(\"./differenceInYears.js\");\n\nvar _index8 = require(\"./toDate.js\");\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert a interval object to a duration object.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param interval - The interval to convert to duration\n *\n * @returns The duration object\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * })\n * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\n\n\nfunction intervalToDuration(interval) {\n  const start = (0, _index8.toDate)(interval.start);\n  const end = (0, _index8.toDate)(interval.end);\n  const duration = {};\n  const years = (0, _index7.differenceInYears)(end, start);\n  if (years) duration.years = years;\n  const remainingMonths = (0, _index.add)(start, {\n    years: duration.years\n  });\n  const months = (0, _index5.differenceInMonths)(end, remainingMonths);\n  if (months) duration.months = months;\n  const remainingDays = (0, _index.add)(remainingMonths, {\n    months: duration.months\n  });\n  const days = (0, _index2.differenceInDays)(end, remainingDays);\n  if (days) duration.days = days;\n  const remainingHours = (0, _index.add)(remainingDays, {\n    days: duration.days\n  });\n  const hours = (0, _index3.differenceInHours)(end, remainingHours);\n  if (hours) duration.hours = hours;\n  const remainingMinutes = (0, _index.add)(remainingHours, {\n    hours: duration.hours\n  });\n  const minutes = (0, _index4.differenceInMinutes)(end, remainingMinutes);\n  if (minutes) duration.minutes = minutes;\n  const remainingSeconds = (0, _index.add)(remainingMinutes, {\n    minutes: duration.minutes\n  });\n  const seconds = (0, _index6.differenceInSeconds)(end, remainingSeconds);\n  if (seconds) duration.seconds = seconds;\n  return duration;\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/intervalToDuration.js"],"names":["exports","intervalToDuration","_index","require","_index2","_index3","_index4","_index5","_index6","_index7","_index8","interval","start","toDate","end","duration","years","differenceInYears","remainingMonths","add","months","differenceInMonths","remainingDays","days","differenceInDays","remainingHours","hours","differenceInHours","remainingMinutes","minutes","differenceInMinutes","remainingSeconds","seconds","differenceInSeconds"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.intervalToDuration = intervalToDuration;\nvar _index = require(\"./add.js\");\nvar _index2 = require(\"./differenceInDays.js\");\nvar _index3 = require(\"./differenceInHours.js\");\nvar _index4 = require(\"./differenceInMinutes.js\");\nvar _index5 = require(\"./differenceInMonths.js\");\nvar _index6 = require(\"./differenceInSeconds.js\");\nvar _index7 = require(\"./differenceInYears.js\");\nvar _index8 = require(\"./toDate.js\");\n\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert a interval object to a duration object.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param interval - The interval to convert to duration\n *\n * @returns The duration object\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * })\n * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\nfunction intervalToDuration(interval) {\n  const start = (0, _index8.toDate)(interval.start);\n  const end = (0, _index8.toDate)(interval.end);\n\n  const duration = {};\n\n  const years = (0, _index7.differenceInYears)(end, start);\n  if (years) duration.years = years;\n\n  const remainingMonths = (0, _index.add)(start, { years: duration.years });\n\n  const months = (0, _index5.differenceInMonths)(end, remainingMonths);\n  if (months) duration.months = months;\n\n  const remainingDays = (0, _index.add)(remainingMonths, {\n    months: duration.months,\n  });\n\n  const days = (0, _index2.differenceInDays)(end, remainingDays);\n  if (days) duration.days = days;\n\n  const remainingHours = (0, _index.add)(remainingDays, {\n    days: duration.days,\n  });\n\n  const hours = (0, _index3.differenceInHours)(end, remainingHours);\n  if (hours) duration.hours = hours;\n\n  const remainingMinutes = (0, _index.add)(remainingHours, {\n    hours: duration.hours,\n  });\n\n  const minutes = (0, _index4.differenceInMinutes)(end, remainingMinutes);\n  if (minutes) duration.minutes = minutes;\n\n  const remainingSeconds = (0, _index.add)(remainingMinutes, {\n    minutes: duration.minutes,\n  });\n\n  const seconds = (0, _index6.differenceInSeconds)(end, remainingSeconds);\n  if (seconds) duration.seconds = seconds;\n\n  return duration;\n}\n"]},"metadata":{},"sourceType":"script"}