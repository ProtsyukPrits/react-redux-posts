{"ast":null,"code":"/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n    let valuesArray;\n\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n\n    const index = args.argumentCallback ? args.argumentCallback(value) : value; // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs"],"names":["buildLocalizeFn","args","value","options","context","String","valuesArray","formattingValues","defaultWidth","defaultFormattingWidth","width","values","index","argumentCallback"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAO,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAO,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzB,UAAMC,OAAO,GAAGD,OAAO,EAAEC,OAAT,GAAmBC,MAAM,CAACF,OAAO,CAACC,OAAT,CAAzB,GAA6C,YAA7D;AAEA,QAAIE,WAAJ;;AACA,QAAIF,OAAO,KAAK,YAAZ,IAA4BH,IAAI,CAACM,gBAArC,EAAuD;AACrD,YAAMC,YAAY,GAAGP,IAAI,CAACQ,sBAAL,IAA+BR,IAAI,CAACO,YAAzD;AACA,YAAME,KAAK,GAAGP,OAAO,EAAEO,KAAT,GAAiBL,MAAM,CAACF,OAAO,CAACO,KAAT,CAAvB,GAAyCF,YAAvD;AAEAF,MAAAA,WAAW,GACTL,IAAI,CAACM,gBAAL,CAAsBG,KAAtB,KAAgCT,IAAI,CAACM,gBAAL,CAAsBC,YAAtB,CADlC;AAED,KAND,MAMO;AACL,YAAMA,YAAY,GAAGP,IAAI,CAACO,YAA1B;AACA,YAAME,KAAK,GAAGP,OAAO,EAAEO,KAAT,GAAiBL,MAAM,CAACF,OAAO,CAACO,KAAT,CAAvB,GAAyCT,IAAI,CAACO,YAA5D;AAEAF,MAAAA,WAAW,GAAGL,IAAI,CAACU,MAAL,CAAYD,KAAZ,KAAsBT,IAAI,CAACU,MAAL,CAAYH,YAAZ,CAApC;AACD;;AACD,UAAMI,KAAK,GAAGX,IAAI,CAACY,gBAAL,GAAwBZ,IAAI,CAACY,gBAAL,CAAsBX,KAAtB,CAAxB,GAAuDA,KAArE,CAhByB,CAkBzB;;AACA,WAAOI,WAAW,CAACM,KAAD,CAAlB;AACD,GApBD;AAqBD","sourcesContent":["/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n"]},"metadata":{},"sourceType":"module"}