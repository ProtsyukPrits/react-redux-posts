{"ast":null,"code":"\"use strict\";\n\nexports.isYesterday = isYesterday;\n\nvar _index = require(\"./constructNow.js\");\n\nvar _index2 = require(\"./isSameDay.js\");\n\nvar _index3 = require(\"./subDays.js\");\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is yesterday\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * const result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\n\n\nfunction isYesterday(date) {\n  return (0, _index2.isSameDay)(date, (0, _index3.subDays)((0, _index.constructNow)(date), 1));\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/isYesterday.js"],"names":["exports","isYesterday","_index","require","_index2","_index3","date","isSameDay","subDays","constructNow"],"mappings":"AAAA;;AACAA,OAAO,CAACC,WAAR,GAAsBA,WAAtB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,cAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,WAAT,CAAqBK,IAArB,EAA2B;AACzB,SAAO,CAAC,GAAGF,OAAO,CAACG,SAAZ,EACLD,IADK,EAEL,CAAC,GAAGD,OAAO,CAACG,OAAZ,EAAqB,CAAC,GAAGN,MAAM,CAACO,YAAX,EAAyBH,IAAzB,CAArB,EAAqD,CAArD,CAFK,CAAP;AAID","sourcesContent":["\"use strict\";\nexports.isYesterday = isYesterday;\nvar _index = require(\"./constructNow.js\");\nvar _index2 = require(\"./isSameDay.js\");\nvar _index3 = require(\"./subDays.js\");\n\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is yesterday\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * const result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\nfunction isYesterday(date) {\n  return (0, _index2.isSameDay)(\n    date,\n    (0, _index3.subDays)((0, _index.constructNow)(date), 1),\n  );\n}\n"]},"metadata":{},"sourceType":"script"}