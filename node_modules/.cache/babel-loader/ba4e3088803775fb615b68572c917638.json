{"ast":null,"code":"\"use strict\";\n\nexports.TimestampMillisecondsParser = void 0;\n\nvar _index = require(\"../../../constructFrom.js\");\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass TimestampMillisecondsParser extends _Parser.Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return (0, _utils.parseAnyDigitsSigned)(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [(0, _index.constructFrom)(date, value), {\n      timestampIsSet: true\n    }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n\nexports.TimestampMillisecondsParser = TimestampMillisecondsParser;","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js"],"names":["exports","TimestampMillisecondsParser","_index","require","_Parser","_utils","Parser","priority","parse","dateString","parseAnyDigitsSigned","set","date","_flags","value","constructFrom","timestampIsSet","incompatibleTokens"],"mappings":"AAAA;;AACAA,OAAO,CAACC,2BAAR,GAAsC,KAAK,CAA3C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,2BAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,aAAD,CAApB;;AAEA,MAAMF,2BAAN,SAA0CG,OAAO,CAACE,MAAlD,CAAyD;AACvDC,EAAAA,QAAQ,GAAG,EAAH;;AAERC,EAAAA,KAAK,CAACC,UAAD,EAAa;AAChB,WAAO,CAAC,GAAGJ,MAAM,CAACK,oBAAX,EAAiCD,UAAjC,CAAP;AACD;;AAEDE,EAAAA,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,EAAsB;AACvB,WAAO,CAAC,CAAC,GAAGZ,MAAM,CAACa,aAAX,EAA0BH,IAA1B,EAAgCE,KAAhC,CAAD,EAAyC;AAAEE,MAAAA,cAAc,EAAE;AAAlB,KAAzC,CAAP;AACD;;AAEDC,EAAAA,kBAAkB,GAAG,GAAH;AAXqC;;AAazDjB,OAAO,CAACC,2BAAR,GAAsCA,2BAAtC","sourcesContent":["\"use strict\";\nexports.TimestampMillisecondsParser = void 0;\nvar _index = require(\"../../../constructFrom.js\");\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass TimestampMillisecondsParser extends _Parser.Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return (0, _utils.parseAnyDigitsSigned)(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [(0, _index.constructFrom)(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\nexports.TimestampMillisecondsParser = TimestampMillisecondsParser;\n"]},"metadata":{},"sourceType":"script"}