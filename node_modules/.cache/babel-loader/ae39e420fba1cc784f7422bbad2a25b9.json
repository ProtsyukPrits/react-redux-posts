{"ast":null,"code":"\"use strict\";\n\nexports.setYear = setYear;\n\nvar _index = require(\"./constructFrom.js\");\n\nvar _index2 = require(\"./toDate.js\");\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param year - The year of the new date\n *\n * @returns The new date with the year set\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * const result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\n\nfunction setYear(date, year) {\n  const _date = (0, _index2.toDate)(date); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n\n  if (isNaN(+_date)) {\n    return (0, _index.constructFrom)(date, NaN);\n  }\n\n  _date.setFullYear(year);\n\n  return _date;\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/setYear.js"],"names":["exports","setYear","_index","require","_index2","date","year","_date","toDate","isNaN","constructFrom","NaN","setFullYear"],"mappings":"AAAA;;AACAA,OAAO,CAACC,OAAR,GAAkBA,OAAlB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,OAAT,CAAiBI,IAAjB,EAAuBC,IAAvB,EAA6B;AAC3B,QAAMC,KAAK,GAAG,CAAC,GAAGH,OAAO,CAACI,MAAZ,EAAoBH,IAApB,CAAd,CAD2B,CAG3B;;;AACA,MAAII,KAAK,CAAC,CAACF,KAAF,CAAT,EAAmB;AACjB,WAAO,CAAC,GAAGL,MAAM,CAACQ,aAAX,EAA0BL,IAA1B,EAAgCM,GAAhC,CAAP;AACD;;AAEDJ,EAAAA,KAAK,CAACK,WAAN,CAAkBN,IAAlB;;AACA,SAAOC,KAAP;AACD","sourcesContent":["\"use strict\";\nexports.setYear = setYear;\nvar _index = require(\"./constructFrom.js\");\nvar _index2 = require(\"./toDate.js\");\n\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param year - The year of the new date\n *\n * @returns The new date with the year set\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * const result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nfunction setYear(date, year) {\n  const _date = (0, _index2.toDate)(date);\n\n  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n  if (isNaN(+_date)) {\n    return (0, _index.constructFrom)(date, NaN);\n  }\n\n  _date.setFullYear(year);\n  return _date;\n}\n"]},"metadata":{},"sourceType":"script"}