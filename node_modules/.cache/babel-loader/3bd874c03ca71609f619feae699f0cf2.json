{"ast":null,"code":"import _slicedToArray from\"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{postAdded}from\"./postsSlice\";import{selectAllUsers}from\"../users/usersSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddPostForm=function AddPostForm(){var dispatch=useDispatch();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),content=_useState4[0],setContent=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),userId=_useState6[0],setUserId=_useState6[1];var users=useSelector(selectAllUsers);var onTitleChanged=function onTitleChanged(e){return setTitle(e.target.value);};var onContentChanged=function onContentChanged(e){return setContent(e.target.value);};var onAuthorChanged=function onAuthorChanged(e){return setUserId(e.target.value);};var onSavePostClicked=function onSavePostClicked(){if(title&&content){dispatch(postAdded(title,content,userId));setTitle(\"\");setContent(\"\");}};var canSave=Boolean(title)&&Boolean(content)&&Boolean(userId);var usersOptions=users.map(function(user){return/*#__PURE__*/_jsx(\"option\",{value:user.id,children:user.name},user.id);});return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add a New Post\"}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Post Title:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postTitle\",name:\"postTitle\",value:title,onChange:onTitleChanged}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postAuthor\",children:\"Author:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"postAuthor\",value:userId,onChange:onAuthorChanged,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\"}),usersOptions]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postContent\",children:\"Content:\"}),/*#__PURE__*/_jsx(\"textarea\",{rows:\"6\",name:\"postContent\",id:\"postContent\",value:content,onChange:onContentChanged}),/*#__PURE__*/_jsx(\"button\",{disabled:!canSave,onClick:onSavePostClicked,type:\"button\",children:\"Save Post\"})]})]});};export default AddPostForm;","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/src/features/posts/AddPostForm.js"],"names":["useState","useDispatch","useSelector","postAdded","selectAllUsers","AddPostForm","dispatch","title","setTitle","content","setContent","userId","setUserId","users","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","onSavePostClicked","canSave","Boolean","usersOptions","map","user","id","name"],"mappings":"oHAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,SAAT,KAA0B,cAA1B,CACA,OAASC,cAAT,KAA+B,qBAA/B,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CAEA,cAA0BD,QAAQ,CAAC,EAAD,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eACA,eAA8BR,QAAQ,CAAC,EAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eACA,eAA4BV,QAAQ,CAAC,EAAD,CAApC,yCAAOW,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,KAAK,CAAGX,WAAW,CAACE,cAAD,CAAzB,CAEA,GAAMU,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,QAAOP,CAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EAAvB,CACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACH,CAAD,QAAOL,CAAAA,UAAU,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,EAAzB,CACA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACJ,CAAD,QAAOH,CAAAA,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB,EAAxB,CAEA,GAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAIb,KAAK,EAAIE,OAAb,CAAsB,CACpBH,QAAQ,CAACH,SAAS,CAACI,KAAD,CAAQE,OAAR,CAAiBE,MAAjB,CAAV,CAAR,CACAH,QAAQ,CAAC,EAAD,CAAR,CACAE,UAAU,CAAC,EAAD,CAAV,CACD,CACF,CAND,CAQA,GAAMW,CAAAA,OAAO,CAAGC,OAAO,CAACf,KAAD,CAAP,EAAkBe,OAAO,CAACb,OAAD,CAAzB,EAAsCa,OAAO,CAACX,MAAD,CAA7D,CAEA,GAAMY,CAAAA,YAAY,CAAGV,KAAK,CAACW,GAAN,CAAU,SAACC,IAAD,qBAC7B,eAAsB,KAAK,CAAEA,IAAI,CAACC,EAAlC,UACGD,IAAI,CAACE,IADR,EAAaF,IAAI,CAACC,EAAlB,CAD6B,EAAV,CAArB,CAMA,mBACE,wCACE,sCADF,cAEE,qCACE,cAAO,OAAO,CAAC,WAAf,yBADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,WAFL,CAGE,IAAI,CAAC,WAHP,CAIE,KAAK,CAAEnB,KAJT,CAKE,QAAQ,CAAEO,cALZ,EAFF,cASE,cAAO,OAAO,CAAC,YAAf,qBATF,cAUE,gBAAQ,EAAE,CAAC,YAAX,CAAwB,KAAK,CAAEH,MAA/B,CAAuC,QAAQ,CAAEQ,eAAjD,wBACE,eAAQ,KAAK,CAAC,EAAd,EADF,CAEGI,YAFH,GAVF,cAcE,cAAO,OAAO,CAAC,aAAf,sBAdF,cAeE,iBACE,IAAI,CAAC,GADP,CAEE,IAAI,CAAC,aAFP,CAGE,EAAE,CAAC,aAHL,CAIE,KAAK,CAAEd,OAJT,CAKE,QAAQ,CAAES,gBALZ,EAfF,cAsBE,eAAQ,QAAQ,CAAE,CAACG,OAAnB,CAA4B,OAAO,CAAED,iBAArC,CAAwD,IAAI,CAAC,QAA7D,uBAtBF,GAFF,GADF,CA+BD,CA5DD,CA8DA,cAAef,CAAAA,WAAf","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { postAdded } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\n\nconst AddPostForm = () => {\n  const dispatch = useDispatch();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n\n  const users = useSelector(selectAllUsers);\n\n  const onTitleChanged = (e) => setTitle(e.target.value);\n  const onContentChanged = (e) => setContent(e.target.value);\n  const onAuthorChanged = (e) => setUserId(e.target.value);\n\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded(title, content, userId));\n      setTitle(\"\");\n      setContent(\"\");\n    }\n  };\n\n  const canSave = Boolean(title) && Boolean(content) && Boolean(userId);\n\n  const usersOptions = users.map((user) => (\n    <option key={user.id} value={user.id}>\n      {user.name}\n    </option>\n  ));\n\n  return (\n    <section>\n      <h2>Add a New Post</h2>\n      <form>\n        <label htmlFor=\"postTitle\">Post Title:</label>\n        <input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n        <label htmlFor=\"postAuthor\">Author:</label>\n        <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n          <option value=\"\"></option>\n          {usersOptions}\n        </select>\n        <label htmlFor=\"postContent\">Content:</label>\n        <textarea\n          rows=\"6\"\n          name=\"postContent\"\n          id=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        ></textarea>\n        <button disabled={!canSave} onClick={onSavePostClicked} type=\"button\">\n          Save Post\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default AddPostForm;\n"]},"metadata":{},"sourceType":"module"}