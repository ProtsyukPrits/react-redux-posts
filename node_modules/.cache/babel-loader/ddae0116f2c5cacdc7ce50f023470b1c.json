{"ast":null,"code":"\"use strict\";\n\nexports.ISOWeekParser = void 0;\n\nvar _index = require(\"../../../setISOWeek.js\");\n\nvar _index2 = require(\"../../../startOfISOWeek.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\"); // ISO week of year\n\n\nclass ISOWeekParser extends _Parser.Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return (0, _utils.parseNumericPattern)(_constants.numericPatterns.week, dateString);\n\n      case \"Io\":\n        return match.ordinalNumber(dateString, {\n          unit: \"week\"\n        });\n\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return (0, _index2.startOfISOWeek)((0, _index.setISOWeek)(date, value));\n  }\n\n  incompatibleTokens = [\"y\", \"Y\", \"u\", \"q\", \"Q\", \"M\", \"L\", \"w\", \"d\", \"D\", \"e\", \"c\", \"t\", \"T\"];\n}\n\nexports.ISOWeekParser = ISOWeekParser;","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js"],"names":["exports","ISOWeekParser","_index","require","_index2","_constants","_Parser","_utils","Parser","priority","parse","dateString","token","match","parseNumericPattern","numericPatterns","week","ordinalNumber","unit","parseNDigits","length","validate","_date","value","set","date","_flags","startOfISOWeek","setISOWeek","incompatibleTokens"],"mappings":"AAAA;;AACAA,OAAO,CAACC,aAAR,GAAwB,KAAK,CAA7B;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,4BAAD,CAArB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,iBAAD,CAAxB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAII,MAAM,GAAGJ,OAAO,CAAC,aAAD,CAApB,C,CAEA;;;AACA,MAAMF,aAAN,SAA4BK,OAAO,CAACE,MAApC,CAA2C;AACzCC,EAAAA,QAAQ,GAAG,GAAH;;AAERC,EAAAA,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;AAC9B,YAAQD,KAAR;AACE,WAAK,GAAL;AACE,eAAO,CAAC,GAAGL,MAAM,CAACO,mBAAX,EACLT,UAAU,CAACU,eAAX,CAA2BC,IADtB,EAELL,UAFK,CAAP;;AAIF,WAAK,IAAL;AACE,eAAOE,KAAK,CAACI,aAAN,CAAoBN,UAApB,EAAgC;AAAEO,UAAAA,IAAI,EAAE;AAAR,SAAhC,CAAP;;AACF;AACE,eAAO,CAAC,GAAGX,MAAM,CAACY,YAAX,EAAyBP,KAAK,CAACQ,MAA/B,EAAuCT,UAAvC,CAAP;AATJ;AAWD;;AAEDU,EAAAA,QAAQ,CAACC,KAAD,EAAQC,KAAR,EAAe;AACrB,WAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;;AAEDC,EAAAA,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeH,KAAf,EAAsB;AACvB,WAAO,CAAC,GAAGnB,OAAO,CAACuB,cAAZ,EAA4B,CAAC,GAAGzB,MAAM,CAAC0B,UAAX,EAAuBH,IAAvB,EAA6BF,KAA7B,CAA5B,CAAP;AACD;;AAEDM,EAAAA,kBAAkB,GAAG,CACnB,GADmB,EAEnB,GAFmB,EAGnB,GAHmB,EAInB,GAJmB,EAKnB,GALmB,EAMnB,GANmB,EAOnB,GAPmB,EAQnB,GARmB,EASnB,GATmB,EAUnB,GAVmB,EAWnB,GAXmB,EAYnB,GAZmB,EAanB,GAbmB,EAcnB,GAdmB,CAAH;AAzBuB;;AA0C3C7B,OAAO,CAACC,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nexports.ISOWeekParser = void 0;\nvar _index = require(\"../../../setISOWeek.js\");\nvar _index2 = require(\"../../../startOfISOWeek.js\");\nvar _constants = require(\"../constants.js\");\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\n// ISO week of year\nclass ISOWeekParser extends _Parser.Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return (0, _utils.parseNumericPattern)(\n          _constants.numericPatterns.week,\n          dateString,\n        );\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return (0, _index2.startOfISOWeek)((0, _index.setISOWeek)(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\nexports.ISOWeekParser = ISOWeekParser;\n"]},"metadata":{},"sourceType":"script"}