{"ast":null,"code":"import { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.mjs"],"names":["Parser","parseNDigitsSigned","ExtendedYearParser","priority","parse","dateString","token","length","set","date","_flags","value","setFullYear","setHours","incompatibleTokens"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,kBAAT,QAAmC,cAAnC;AAEA,OAAO,MAAMC,kBAAN,SAAiCF,MAAjC,CAAwC;AAC7CG,EAAAA,QAAQ,GAAG,GAAH;;AAERC,EAAAA,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoB;AACvB,QAAIA,KAAK,KAAK,GAAd,EAAmB;AACjB,aAAOL,kBAAkB,CAAC,CAAD,EAAII,UAAJ,CAAzB;AACD;;AAED,WAAOJ,kBAAkB,CAACK,KAAK,CAACC,MAAP,EAAeF,UAAf,CAAzB;AACD;;AAEDG,EAAAA,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,EAAsB;AACvBF,IAAAA,IAAI,CAACG,WAAL,CAAiBD,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B;AACAF,IAAAA,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,WAAOJ,IAAP;AACD;;AAEDK,EAAAA,kBAAkB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,CAAH;AAjB2B","sourcesContent":["import { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n"]},"metadata":{},"sourceType":"module"}