{"ast":null,"code":"// ../../../react-shim.js\nimport React from \"react\"; // src/avatar.tsx\n\nimport { chakra as chakra4, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\"; // ../../utilities/shared-utils/src/index.ts\n\nvar cx = function () {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\n\nvar dataAttr = condition => condition ? \"\" : void 0;\n\nfunction callAllHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function func(event) {\n    fns.some(fn => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n} // src/avatar-context.tsx\n\n\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [AvatarStylesProvider, useAvatarStyles] = createContext({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\"\n}); // src/avatar-image.tsx\n\nimport { useImage } from \"@chakra-ui/image\";\nimport { chakra as chakra3 } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\"; // src/avatar-name.tsx\n\nimport { chakra } from \"@chakra-ui/system\";\n\nfunction initials(name) {\n  const [firstName, lastName] = name.split(\" \");\n  return firstName && lastName ? `${firstName.charAt(0)}${lastName.charAt(0)}` : firstName.charAt(0);\n}\n\nfunction AvatarName(props) {\n  const {\n    name,\n    getInitials,\n    ...rest\n  } = props;\n  const styles = useAvatarStyles();\n  return /* @__PURE__ */React.createElement(chakra.div, {\n    role: \"img\",\n    \"aria-label\": name,\n    ...rest,\n    __css: styles.label\n  }, name ? getInitials == null ? void 0 : getInitials(name) : null);\n}\n\nAvatarName.displayName = \"AvatarName\"; // src/generic-avatar-icon.tsx\n\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\n\nvar GenericAvatarIcon = props => /* @__PURE__ */React.createElement(chakra2.svg, {\n  viewBox: \"0 0 128 128\",\n  color: \"#fff\",\n  width: \"100%\",\n  height: \"100%\",\n  className: \"chakra-avatar__svg\",\n  ...props\n}, /* @__PURE__ */React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n}), /* @__PURE__ */React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n})); // src/avatar-image.tsx\n\n\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */React.createElement(GenericAvatarIcon, null),\n    ignoreFallback,\n    referrerPolicy\n  } = props;\n  const status = useImage({\n    src,\n    onError,\n    ignoreFallback\n  });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n\n  if (showFallback) {\n    return name ? /* @__PURE__ */React.createElement(AvatarName, {\n      className: \"chakra-avatar__initials\",\n      getInitials,\n      name\n    }) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n\n  return /* @__PURE__ */React.createElement(chakra3.img, {\n    src,\n    srcSet,\n    alt: name,\n    onLoad,\n    referrerPolicy,\n    className: \"chakra-avatar__img\",\n    loading,\n    __css: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius\n    }\n  });\n}\n\nAvatarImage.displayName = \"AvatarImage\"; // src/avatar.tsx\n\nimport { useState } from \"react\";\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */React.createElement(GenericAvatarIcon, null),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n\n  return /* @__PURE__ */React.createElement(chakra4.span, {\n    ref,\n    ...rest,\n    className: cx(\"chakra-avatar\", props.className),\n    \"data-loaded\": dataAttr(isLoaded),\n    __css: avatarStyles\n  }, /* @__PURE__ */React.createElement(AvatarStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */React.createElement(AvatarImage, {\n    src,\n    srcSet,\n    loading,\n    onLoad: callAllHandlers(onLoadProp, () => {\n      setIsLoaded(true);\n    }),\n    onError,\n    getInitials,\n    name,\n    borderRadius,\n    icon,\n    iconLabel,\n    ignoreFallback\n  }), children));\n});\nAvatar.displayName = \"Avatar\"; // src/avatar-group.tsx\n\nimport { chakra as chakra5, forwardRef as forwardRef2, omitThemingProps as omitThemingProps2, useMultiStyleConfig as useMultiStyleConfig2 } from \"@chakra-ui/system\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"; // ../../utilities/object-utils/src/index.ts\n\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n\n  for (let key in clone) {\n    if (clone[key] === void 0) delete clone[key];\n  }\n\n  return clone;\n} // src/avatar-group.tsx\n\n\nimport { cloneElement as cloneElement2 } from \"react\";\nvar AvatarGroup = forwardRef2(function AvatarGroup2(props, ref) {\n  const styles = useMultiStyleConfig2(\"Avatar\", props);\n  const {\n    children,\n    borderColor,\n    max,\n    spacing = \"-0.75rem\",\n    borderRadius = \"full\",\n    ...rest\n  } = omitThemingProps2(props);\n  const validChildren = getValidChildren(children);\n  const childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  const excess = max != null && validChildren.length - max;\n  const reversedChildren = childrenWithinMax.reverse();\n  const clones = reversedChildren.map((child, index) => {\n    const isFirstAvatar = index === 0;\n    const childProps = {\n      marginEnd: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: child.props.borderColor ?? borderColor,\n      showBorder: true\n    };\n    return cloneElement2(child, compact(childProps));\n  });\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\",\n    ...styles.group\n  };\n  const excessStyles = {\n    borderRadius,\n    marginStart: spacing,\n    ...baseStyle,\n    ...styles.excessLabel\n  };\n  return /* @__PURE__ */React.createElement(chakra5.div, {\n    ref,\n    role: \"group\",\n    __css: groupStyles,\n    ...rest,\n    className: cx(\"chakra-avatar__group\", props.className)\n  }, excess > 0 && /* @__PURE__ */React.createElement(chakra5.span, {\n    className: \"chakra-avatar__excess\",\n    __css: excessStyles\n  }, `+${excess}`), clones);\n});\nAvatarGroup.displayName = \"AvatarGroup\"; // src/avatar-badge.tsx\n\nimport { chakra as chakra6, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar placementMap = {\n  \"top-start\": {\n    top: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, -25%)\"\n  },\n  \"top-end\": {\n    top: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, -25%)\"\n  },\n  \"bottom-start\": {\n    bottom: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, 25%)\"\n  },\n  \"bottom-end\": {\n    bottom: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, 25%)\"\n  }\n};\nvar AvatarBadge = forwardRef3(function AvatarBadge2(props, ref) {\n  const {\n    placement = \"bottom-end\",\n    className,\n    ...rest\n  } = props;\n  const styles = useAvatarStyles();\n  const placementStyles = placementMap[placement];\n  const badgeStyles = {\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...placementStyles,\n    ...styles.badge\n  };\n  return /* @__PURE__ */React.createElement(chakra6.div, {\n    ref,\n    ...rest,\n    className: cx(\"chakra-avatar__badge\", className),\n    __css: badgeStyles\n  });\n});\nAvatarBadge.displayName = \"AvatarBadge\";\nexport { Avatar, AvatarBadge, AvatarGroup, GenericAvatarIcon, useAvatarStyles };","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/@chakra-ui/avatar/dist/index.esm.js"],"names":["React","chakra","chakra4","forwardRef","omitThemingProps","useMultiStyleConfig","cx","classNames","filter","Boolean","join","dataAttr","condition","callAllHandlers","fns","func","event","some","fn","defaultPrevented","createContext","AvatarStylesProvider","useAvatarStyles","name","hookName","providerName","useImage","chakra3","cloneElement","initials","firstName","lastName","split","charAt","AvatarName","props","getInitials","rest","styles","createElement","div","role","__css","label","displayName","chakra2","GenericAvatarIcon","svg","viewBox","color","width","height","className","fill","d","AvatarImage","src","srcSet","onError","onLoad","borderRadius","loading","iconLabel","icon","ignoreFallback","referrerPolicy","status","hasLoaded","showFallback","img","alt","objectFit","useState","baseStyle","display","alignItems","justifyContent","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","ref","isLoaded","setIsLoaded","showBorder","onLoadProp","children","borderColor","avatarStyles","borderWidth","container","span","value","chakra5","forwardRef2","omitThemingProps2","useMultiStyleConfig2","getValidChildren","compact","object","clone","Object","assign","key","cloneElement2","AvatarGroup","AvatarGroup2","max","spacing","validChildren","childrenWithinMax","slice","excess","length","reversedChildren","reverse","clones","map","child","index","isFirstAvatar","childProps","marginEnd","size","groupStyles","flexDirection","group","excessStyles","marginStart","excessLabel","chakra6","forwardRef3","placementMap","top","insetStart","transform","insetEnd","bottom","AvatarBadge","AvatarBadge2","placement","placementStyles","badgeStyles","badge"],"mappings":"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","sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/avatar.tsx\nimport {\n  chakra as chakra4,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\n\n// src/avatar-context.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [AvatarStylesProvider, useAvatarStyles] = createContext({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\"\n});\n\n// src/avatar-image.tsx\nimport { useImage } from \"@chakra-ui/image\";\nimport { chakra as chakra3 } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\n\n// src/avatar-name.tsx\nimport { chakra } from \"@chakra-ui/system\";\nfunction initials(name) {\n  const [firstName, lastName] = name.split(\" \");\n  return firstName && lastName ? `${firstName.charAt(0)}${lastName.charAt(0)}` : firstName.charAt(0);\n}\nfunction AvatarName(props) {\n  const { name, getInitials, ...rest } = props;\n  const styles = useAvatarStyles();\n  return /* @__PURE__ */ React.createElement(chakra.div, {\n    role: \"img\",\n    \"aria-label\": name,\n    ...rest,\n    __css: styles.label\n  }, name ? getInitials == null ? void 0 : getInitials(name) : null);\n}\nAvatarName.displayName = \"AvatarName\";\n\n// src/generic-avatar-icon.tsx\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nvar GenericAvatarIcon = (props) => /* @__PURE__ */ React.createElement(chakra2.svg, {\n  viewBox: \"0 0 128 128\",\n  color: \"#fff\",\n  width: \"100%\",\n  height: \"100%\",\n  className: \"chakra-avatar__svg\",\n  ...props\n}, /* @__PURE__ */ React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n}), /* @__PURE__ */ React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n}));\n\n// src/avatar-image.tsx\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */ React.createElement(GenericAvatarIcon, null),\n    ignoreFallback,\n    referrerPolicy\n  } = props;\n  const status = useImage({ src, onError, ignoreFallback });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n  if (showFallback) {\n    return name ? /* @__PURE__ */ React.createElement(AvatarName, {\n      className: \"chakra-avatar__initials\",\n      getInitials,\n      name\n    }) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra3.img, {\n    src,\n    srcSet,\n    alt: name,\n    onLoad,\n    referrerPolicy,\n    className: \"chakra-avatar__img\",\n    loading,\n    __css: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius\n    }\n  });\n}\nAvatarImage.displayName = \"AvatarImage\";\n\n// src/avatar.tsx\nimport { useState } from \"react\";\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */ React.createElement(GenericAvatarIcon, null),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */ React.createElement(chakra4.span, {\n    ref,\n    ...rest,\n    className: cx(\"chakra-avatar\", props.className),\n    \"data-loaded\": dataAttr(isLoaded),\n    __css: avatarStyles\n  }, /* @__PURE__ */ React.createElement(AvatarStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(AvatarImage, {\n    src,\n    srcSet,\n    loading,\n    onLoad: callAllHandlers(onLoadProp, () => {\n      setIsLoaded(true);\n    }),\n    onError,\n    getInitials,\n    name,\n    borderRadius,\n    icon,\n    iconLabel,\n    ignoreFallback\n  }), children));\n});\nAvatar.displayName = \"Avatar\";\n\n// src/avatar-group.tsx\nimport {\n  chakra as chakra5,\n  forwardRef as forwardRef2,\n  omitThemingProps as omitThemingProps2,\n  useMultiStyleConfig as useMultiStyleConfig2\n} from \"@chakra-ui/system\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/avatar-group.tsx\nimport { cloneElement as cloneElement2 } from \"react\";\nvar AvatarGroup = forwardRef2(function AvatarGroup2(props, ref) {\n  const styles = useMultiStyleConfig2(\"Avatar\", props);\n  const {\n    children,\n    borderColor,\n    max,\n    spacing = \"-0.75rem\",\n    borderRadius = \"full\",\n    ...rest\n  } = omitThemingProps2(props);\n  const validChildren = getValidChildren(children);\n  const childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  const excess = max != null && validChildren.length - max;\n  const reversedChildren = childrenWithinMax.reverse();\n  const clones = reversedChildren.map((child, index) => {\n    const isFirstAvatar = index === 0;\n    const childProps = {\n      marginEnd: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: child.props.borderColor ?? borderColor,\n      showBorder: true\n    };\n    return cloneElement2(child, compact(childProps));\n  });\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\",\n    ...styles.group\n  };\n  const excessStyles = {\n    borderRadius,\n    marginStart: spacing,\n    ...baseStyle,\n    ...styles.excessLabel\n  };\n  return /* @__PURE__ */ React.createElement(chakra5.div, {\n    ref,\n    role: \"group\",\n    __css: groupStyles,\n    ...rest,\n    className: cx(\"chakra-avatar__group\", props.className)\n  }, excess > 0 && /* @__PURE__ */ React.createElement(chakra5.span, {\n    className: \"chakra-avatar__excess\",\n    __css: excessStyles\n  }, `+${excess}`), clones);\n});\nAvatarGroup.displayName = \"AvatarGroup\";\n\n// src/avatar-badge.tsx\nimport {\n  chakra as chakra6,\n  forwardRef as forwardRef3\n} from \"@chakra-ui/system\";\nvar placementMap = {\n  \"top-start\": {\n    top: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, -25%)\"\n  },\n  \"top-end\": {\n    top: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, -25%)\"\n  },\n  \"bottom-start\": {\n    bottom: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, 25%)\"\n  },\n  \"bottom-end\": {\n    bottom: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, 25%)\"\n  }\n};\nvar AvatarBadge = forwardRef3(function AvatarBadge2(props, ref) {\n  const { placement = \"bottom-end\", className, ...rest } = props;\n  const styles = useAvatarStyles();\n  const placementStyles = placementMap[placement];\n  const badgeStyles = {\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...placementStyles,\n    ...styles.badge\n  };\n  return /* @__PURE__ */ React.createElement(chakra6.div, {\n    ref,\n    ...rest,\n    className: cx(\"chakra-avatar__badge\", className),\n    __css: badgeStyles\n  });\n});\nAvatarBadge.displayName = \"AvatarBadge\";\nexport {\n  Avatar,\n  AvatarBadge,\n  AvatarGroup,\n  GenericAvatarIcon,\n  useAvatarStyles\n};\n"]},"metadata":{},"sourceType":"module"}