{"ast":null,"code":"// src/refs.ts\nimport { isFunction } from \"@chakra-ui/utils\";\n\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (isFunction(ref)) {\n    ref(value);\n    return;\n  }\n\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(\"Cannot assign value '\".concat(value, \"' to ref '\").concat(ref, \"'\"));\n  }\n}\n\nfunction mergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return function (node) {\n    refs.forEach(function (ref) {\n      return assignRef(ref, node);\n    });\n  };\n} // src/context.ts\n\n\nimport { createContext as createReactContext, useContext as useReactContext } from \"react\";\n\nfunction createContext() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$strict = options.strict,\n      strict = _options$strict === void 0 ? true : _options$strict,\n      _options$errorMessage = options.errorMessage,\n      errorMessage = _options$errorMessage === void 0 ? \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\" : _options$errorMessage,\n      name = options.name;\n  var Context = createReactContext(void 0);\n  Context.displayName = name;\n\n  function useContext() {\n    var _a;\n\n    var context = useReactContext(Context);\n\n    if (!context && strict) {\n      var error = new Error(errorMessage);\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext);\n      throw error;\n    }\n\n    return context;\n  }\n\n  return [Context.Provider, useContext, Context];\n} // src/children.ts\n\n\nimport { Children, isValidElement } from \"react\";\n\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(function (child) {\n    return isValidElement(child);\n  });\n}\n\nexport { assignRef, createContext, getValidChildren, mergeRefs };","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/@chakra-ui/react-utils/dist/index.esm.js"],"names":["isFunction","assignRef","ref","value","current","error","Error","mergeRefs","refs","node","forEach","createContext","createReactContext","useContext","useReactContext","options","strict","errorMessage","name","Context","displayName","_a","context","captureStackTrace","call","Provider","Children","isValidElement","getValidChildren","children","toArray","filter","child"],"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,kBAA3B;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+B;AAC7B,MAAID,GAAG,IAAI,IAAX,EACE;;AACF,MAAIF,UAAU,CAACE,GAAD,CAAd,EAAqB;AACnBA,IAAAA,GAAG,CAACC,KAAD,CAAH;AACA;AACD;;AACD,MAAI;AACFD,IAAAA,GAAG,CAACE,OAAJ,GAAcD,KAAd;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,gCAAkCH,KAAlC,uBAAoDD,GAApD,OAAN;AACD;AACF;;AACD,SAASK,SAAT,GAA4B;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAC1B,SAAO,UAACC,IAAD,EAAU;AACfD,IAAAA,IAAI,CAACE,OAAL,CAAa,UAACR,GAAD;AAAA,aAASD,SAAS,CAACC,GAAD,EAAMO,IAAN,CAAlB;AAAA,KAAb;AACD,GAFD;AAGD,C,CAED;;;AACA,SACEE,aAAa,IAAIC,kBADnB,EAEEC,UAAU,IAAIC,eAFhB,QAGO,OAHP;;AAIA,SAASH,aAAT,GAAqC;AAAA,MAAdI,OAAc,uEAAJ,EAAI;AACnC,wBAIIA,OAJJ,CACEC,MADF;AAAA,MACEA,MADF,gCACW,IADX;AAAA,8BAIID,OAJJ,CAEEE,YAFF;AAAA,MAEEA,YAFF,sCAEiB,4FAFjB;AAAA,MAGEC,IAHF,GAIIH,OAJJ,CAGEG,IAHF;AAKA,MAAMC,OAAO,GAAGP,kBAAkB,CAAC,KAAK,CAAN,CAAlC;AACAO,EAAAA,OAAO,CAACC,WAAR,GAAsBF,IAAtB;;AACA,WAASL,UAAT,GAAsB;AACpB,QAAIQ,EAAJ;;AACA,QAAMC,OAAO,GAAGR,eAAe,CAACK,OAAD,CAA/B;;AACA,QAAI,CAACG,OAAD,IAAYN,MAAhB,EAAwB;AACtB,UAAMX,KAAK,GAAG,IAAIC,KAAJ,CAAUW,YAAV,CAAd;AACAZ,MAAAA,KAAK,CAACa,IAAN,GAAa,cAAb;AACA,OAACG,EAAE,GAAGf,KAAK,CAACiB,iBAAZ,KAAkC,IAAlC,GAAyC,KAAK,CAA9C,GAAkDF,EAAE,CAACG,IAAH,CAAQlB,KAAR,EAAeD,KAAf,EAAsBQ,UAAtB,CAAlD;AACA,YAAMR,KAAN;AACD;;AACD,WAAOiB,OAAP;AACD;;AACD,SAAO,CACLH,OAAO,CAACM,QADH,EAELZ,UAFK,EAGLM,OAHK,CAAP;AAKD,C,CAED;;;AACA,SAASO,QAAT,EAAmBC,cAAnB,QAAyC,OAAzC;;AACA,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,SAAOH,QAAQ,CAACI,OAAT,CAAiBD,QAAjB,EAA2BE,MAA3B,CAAkC,UAACC,KAAD;AAAA,WAAWL,cAAc,CAACK,KAAD,CAAzB;AAAA,GAAlC,CAAP;AACD;;AACD,SACE/B,SADF,EAEEU,aAFF,EAGEiB,gBAHF,EAIErB,SAJF","sourcesContent":["// src/refs.ts\nimport { isFunction } from \"@chakra-ui/utils\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (isFunction(ref)) {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => assignRef(ref, node));\n  };\n}\n\n// src/context.ts\nimport {\n  createContext as createReactContext,\n  useContext as useReactContext\n} from \"react\";\nfunction createContext(options = {}) {\n  const {\n    strict = true,\n    errorMessage = \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\",\n    name\n  } = options;\n  const Context = createReactContext(void 0);\n  Context.displayName = name;\n  function useContext() {\n    var _a;\n    const context = useReactContext(Context);\n    if (!context && strict) {\n      const error = new Error(errorMessage);\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext);\n      throw error;\n    }\n    return context;\n  }\n  return [\n    Context.Provider,\n    useContext,\n    Context\n  ];\n}\n\n// src/children.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter((child) => isValidElement(child));\n}\nexport {\n  assignRef,\n  createContext,\n  getValidChildren,\n  mergeRefs\n};\n"]},"metadata":{},"sourceType":"module"}