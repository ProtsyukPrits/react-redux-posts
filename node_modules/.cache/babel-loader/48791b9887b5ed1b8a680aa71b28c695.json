{"ast":null,"code":"\"use strict\";\n\nexports.isFuture = isFuture;\n\nvar _index = require(\"./toDate.js\");\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is in the future\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * const result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\n\n\nfunction isFuture(date) {\n  return +(0, _index.toDate)(date) > Date.now();\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/isFuture.js"],"names":["exports","isFuture","_index","require","date","toDate","Date","now"],"mappings":"AAAA;;AACAA,OAAO,CAACC,QAAR,GAAmBA,QAAnB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,QAAT,CAAkBG,IAAlB,EAAwB;AACtB,SAAO,CAAC,CAAC,GAAGF,MAAM,CAACG,MAAX,EAAmBD,IAAnB,CAAD,GAA4BE,IAAI,CAACC,GAAL,EAAnC;AACD","sourcesContent":["\"use strict\";\nexports.isFuture = isFuture;\nvar _index = require(\"./toDate.js\");\n\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is in the future\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * const result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nfunction isFuture(date) {\n  return +(0, _index.toDate)(date) > Date.now();\n}\n"]},"metadata":{},"sourceType":"script"}