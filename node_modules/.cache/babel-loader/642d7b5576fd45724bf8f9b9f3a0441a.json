{"ast":null,"code":"import _classCallCheck from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\nexport var Hour1to12Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour1to12Parser, _Parser);\n\n  var _super = _createSuper(Hour1to12Parser);\n\n  function Hour1to12Parser() {\n    var _this;\n\n    _classCallCheck(this, Hour1to12Parser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", [\"H\", \"K\", \"k\", \"t\", \"T\"]);\n\n    return _this;\n  }\n\n  _createClass(Hour1to12Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case \"h\":\n          return parseNumericPattern(numericPatterns.hour12h, dateString);\n\n        case \"ho\":\n          return match.ordinalNumber(dateString, {\n            unit: \"hour\"\n          });\n\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 12;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      var isPM = date.getHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setHours(0, 0, 0, 0);\n      } else {\n        date.setHours(value, 0, 0, 0);\n      }\n\n      return date;\n    }\n  }]);\n\n  return Hour1to12Parser;\n}(Parser);","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.mjs"],"names":["numericPatterns","Parser","parseNDigits","parseNumericPattern","Hour1to12Parser","dateString","token","match","hour12h","ordinalNumber","unit","length","_date","value","date","_flags","isPM","getHours","setHours"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,cAAlD;AAEA,WAAaC,eAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,+DACa,EADb;;AAAA,yEA8BuB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CA9BvB;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAGE,eAAMC,UAAN,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgC;AAC9B,cAAQD,KAAR;AACE,aAAK,GAAL;AACE,iBAAOH,mBAAmB,CAACH,eAAe,CAACQ,OAAjB,EAA0BH,UAA1B,CAA1B;;AACF,aAAK,IAAL;AACE,iBAAOE,KAAK,CAACE,aAAN,CAAoBJ,UAApB,EAAgC;AAAEK,YAAAA,IAAI,EAAE;AAAR,WAAhC,CAAP;;AACF;AACE,iBAAOR,YAAY,CAACI,KAAK,CAACK,MAAP,EAAeN,UAAf,CAAnB;AANJ;AAQD;AAZH;AAAA;AAAA,WAcE,kBAASO,KAAT,EAAgBC,KAAhB,EAAuB;AACrB,aAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;AAhBH;AAAA;AAAA,WAkBE,aAAIC,IAAJ,EAAUC,MAAV,EAAkBF,KAAlB,EAAyB;AACvB,UAAMG,IAAI,GAAGF,IAAI,CAACG,QAAL,MAAmB,EAAhC;;AACA,UAAID,IAAI,IAAIH,KAAK,GAAG,EAApB,EAAwB;AACtBC,QAAAA,IAAI,CAACI,QAAL,CAAcL,KAAK,GAAG,EAAtB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC;AACD,OAFD,MAEO,IAAI,CAACG,IAAD,IAASH,KAAK,KAAK,EAAvB,EAA2B;AAChCC,QAAAA,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACD,OAFM,MAEA;AACLJ,QAAAA,IAAI,CAACI,QAAL,CAAcL,KAAd,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACD;;AACD,aAAOC,IAAP;AACD;AA5BH;;AAAA;AAAA,EAAqCb,MAArC","sourcesContent":["import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n"]},"metadata":{},"sourceType":"module"}