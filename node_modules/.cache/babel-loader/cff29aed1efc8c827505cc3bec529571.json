{"ast":null,"code":"// ../../../react-shim.js\nimport React from \"react\"; // src/chakra-provider.tsx\n\nimport { CSSReset, CSSPolyfill } from \"@chakra-ui/css-reset\";\nimport { PortalManager } from \"@chakra-ui/portal\";\nimport { ColorModeProvider, GlobalStyle, ThemeProvider } from \"@chakra-ui/system\";\nimport { EnvironmentProvider } from \"@chakra-ui/react-env\";\n\nvar ChakraProvider = function ChakraProvider(props) {\n  var children = props.children,\n      colorModeManager = props.colorModeManager,\n      portalZIndex = props.portalZIndex,\n      _props$resetCSS = props.resetCSS,\n      resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? {} : _props$theme,\n      environment = props.environment,\n      cssVarsRoot = props.cssVarsRoot;\n\n  var _children = /* @__PURE__ */React.createElement(EnvironmentProvider, {\n    environment: environment\n  }, children);\n\n  return /* @__PURE__ */React.createElement(ThemeProvider, {\n    theme: theme,\n    cssVarsRoot: cssVarsRoot\n  }, /* @__PURE__ */React.createElement(ColorModeProvider, {\n    colorModeManager: colorModeManager,\n    options: theme.config\n  }, resetCSS ? /* @__PURE__ */React.createElement(CSSReset, null) : /* @__PURE__ */React.createElement(CSSPolyfill, null), /* @__PURE__ */React.createElement(GlobalStyle, null), portalZIndex ? /* @__PURE__ */React.createElement(PortalManager, {\n    zIndex: portalZIndex\n  }, _children) : _children));\n};\n\nexport { ChakraProvider };","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/@chakra-ui/provider/dist/index.esm.js"],"names":["React","CSSReset","CSSPolyfill","PortalManager","ColorModeProvider","GlobalStyle","ThemeProvider","EnvironmentProvider","ChakraProvider","props","children","colorModeManager","portalZIndex","resetCSS","theme","environment","cssVarsRoot","_children","createElement","options","config","zIndex"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,sBAAtC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SACEC,iBADF,EAEEC,WAFF,EAGEC,aAHF,QAIO,mBAJP;AAKA,SACEC,mBADF,QAEO,sBAFP;;AAGA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAC9B,MACEC,QADF,GAQID,KARJ,CACEC,QADF;AAAA,MAEEC,gBAFF,GAQIF,KARJ,CAEEE,gBAFF;AAAA,MAGEC,YAHF,GAQIH,KARJ,CAGEG,YAHF;AAAA,wBAQIH,KARJ,CAIEI,QAJF;AAAA,MAIEA,QAJF,gCAIa,IAJb;AAAA,qBAQIJ,KARJ,CAKEK,KALF;AAAA,MAKEA,KALF,6BAKU,EALV;AAAA,MAMEC,WANF,GAQIN,KARJ,CAMEM,WANF;AAAA,MAOEC,WAPF,GAQIP,KARJ,CAOEO,WAPF;;AASA,MAAMC,SAAS,GAAG,eAAgBjB,KAAK,CAACkB,aAAN,CAAoBX,mBAApB,EAAyC;AACzEQ,IAAAA,WAAW,EAAXA;AADyE,GAAzC,EAE/BL,QAF+B,CAAlC;;AAGA,SAAO,eAAgBV,KAAK,CAACkB,aAAN,CAAoBZ,aAApB,EAAmC;AACxDQ,IAAAA,KAAK,EAALA,KADwD;AAExDE,IAAAA,WAAW,EAAXA;AAFwD,GAAnC,EAGpB,eAAgBhB,KAAK,CAACkB,aAAN,CAAoBd,iBAApB,EAAuC;AACxDO,IAAAA,gBAAgB,EAAhBA,gBADwD;AAExDQ,IAAAA,OAAO,EAAEL,KAAK,CAACM;AAFyC,GAAvC,EAGhBP,QAAQ,GAAG,eAAgBb,KAAK,CAACkB,aAAN,CAAoBjB,QAApB,EAA8B,IAA9B,CAAnB,GAAyD,eAAgBD,KAAK,CAACkB,aAAN,CAAoBhB,WAApB,EAAiC,IAAjC,CAHjE,EAGyG,eAAgBF,KAAK,CAACkB,aAAN,CAAoBb,WAApB,EAAiC,IAAjC,CAHzH,EAGiKO,YAAY,GAAG,eAAgBZ,KAAK,CAACkB,aAAN,CAAoBf,aAApB,EAAmC;AACpPkB,IAAAA,MAAM,EAAET;AAD4O,GAAnC,EAEhNK,SAFgN,CAAnB,GAEhLA,SALG,CAHI,CAAvB;AASD,CAtBD;;AAuBA,SACET,cADF","sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/chakra-provider.tsx\nimport { CSSReset, CSSPolyfill } from \"@chakra-ui/css-reset\";\nimport { PortalManager } from \"@chakra-ui/portal\";\nimport {\n  ColorModeProvider,\n  GlobalStyle,\n  ThemeProvider\n} from \"@chakra-ui/system\";\nimport {\n  EnvironmentProvider\n} from \"@chakra-ui/react-env\";\nvar ChakraProvider = (props) => {\n  const {\n    children,\n    colorModeManager,\n    portalZIndex,\n    resetCSS = true,\n    theme = {},\n    environment,\n    cssVarsRoot\n  } = props;\n  const _children = /* @__PURE__ */ React.createElement(EnvironmentProvider, {\n    environment\n  }, children);\n  return /* @__PURE__ */ React.createElement(ThemeProvider, {\n    theme,\n    cssVarsRoot\n  }, /* @__PURE__ */ React.createElement(ColorModeProvider, {\n    colorModeManager,\n    options: theme.config\n  }, resetCSS ? /* @__PURE__ */ React.createElement(CSSReset, null) : /* @__PURE__ */ React.createElement(CSSPolyfill, null), /* @__PURE__ */ React.createElement(GlobalStyle, null), portalZIndex ? /* @__PURE__ */ React.createElement(PortalManager, {\n    zIndex: portalZIndex\n  }, _children) : _children));\n};\nexport {\n  ChakraProvider\n};\n"]},"metadata":{},"sourceType":"module"}