{"ast":null,"code":"\"use strict\";\n\nexports.getDaysInYear = getDaysInYear;\n\nvar _index = require(\"./isLeapYear.js\");\n\nvar _index2 = require(\"./toDate.js\");\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The number of days in a year\n *\n * @example\n * // How many days are in 2012?\n * const result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\n\n\nfunction getDaysInYear(date) {\n  const _date = (0, _index2.toDate)(date);\n\n  if (String(new Date(_date)) === \"Invalid Date\") {\n    return NaN;\n  }\n\n  return (0, _index.isLeapYear)(_date) ? 366 : 365;\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/getDaysInYear.js"],"names":["exports","getDaysInYear","_index","require","_index2","date","_date","toDate","String","Date","NaN","isLeapYear"],"mappings":"AAAA;;AACAA,OAAO,CAACC,aAAR,GAAwBA,aAAxB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,aAAT,CAAuBI,IAAvB,EAA6B;AAC3B,QAAMC,KAAK,GAAG,CAAC,GAAGF,OAAO,CAACG,MAAZ,EAAoBF,IAApB,CAAd;;AAEA,MAAIG,MAAM,CAAC,IAAIC,IAAJ,CAASH,KAAT,CAAD,CAAN,KAA4B,cAAhC,EAAgD;AAC9C,WAAOI,GAAP;AACD;;AAED,SAAO,CAAC,GAAGR,MAAM,CAACS,UAAX,EAAuBL,KAAvB,IAAgC,GAAhC,GAAsC,GAA7C;AACD","sourcesContent":["\"use strict\";\nexports.getDaysInYear = getDaysInYear;\nvar _index = require(\"./isLeapYear.js\");\nvar _index2 = require(\"./toDate.js\");\n\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The number of days in a year\n *\n * @example\n * // How many days are in 2012?\n * const result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\nfunction getDaysInYear(date) {\n  const _date = (0, _index2.toDate)(date);\n\n  if (String(new Date(_date)) === \"Invalid Date\") {\n    return NaN;\n  }\n\n  return (0, _index.isLeapYear)(_date) ? 366 : 365;\n}\n"]},"metadata":{},"sourceType":"script"}