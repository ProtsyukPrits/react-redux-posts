{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport { handlePending, handleRejected, handleFetchContactsFulfilled, handleAddContactFulfilled, handleDeleteContactFulfilled } from './constants';\nimport { addContact, deleteContact, fetchContacts } from './operations';\nconst contactsInitialState = {\n  items: [],\n  isLoading: false,\n  error: null\n};\nconst contactsSlice = createSlice({\n  name: 'items',\n  initialState: contactsInitialState,\n  extraReducers: {\n    [fetchContacts.pending]: handlePending,\n    [fetchContacts.fulfilled]: handleFetchContactsFulfilled,\n    [fetchContacts.rejected]: handleRejected,\n    [addContact.pending]: handlePending,\n    [addContact.fulfilled]: handleAddContactFulfilled,\n\n    prepare(_ref) {\n      let {\n        name,\n        number\n      } = _ref;\n      return {\n        payload: {\n          name,\n          number,\n          id: nanoid()\n        }\n      };\n    },\n\n    [addContact.rejected]: handleRejected,\n    [deleteContact.pending]: handlePending,\n    [deleteContact.fulfilled]: handleDeleteContactFulfilled,\n    [deleteContact.rejected]: handleRejected\n  }\n});\nexport const contactsReducer = contactsSlice.reducer;","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/src/redux/contacts/contactsSlice.js"],"names":["createSlice","nanoid","handlePending","handleRejected","handleFetchContactsFulfilled","handleAddContactFulfilled","handleDeleteContactFulfilled","addContact","deleteContact","fetchContacts","contactsInitialState","items","isLoading","error","contactsSlice","name","initialState","extraReducers","pending","fulfilled","rejected","prepare","number","payload","id","contactsReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,kBAApC;AACA,SACEC,aADF,EAEEC,cAFF,EAGEC,4BAHF,EAIEC,yBAJF,EAKEC,4BALF,QAMO,aANP;AAOA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,aAApC,QAAyD,cAAzD;AAEA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,KAAK,EAAE,EADoB;AAE3BC,EAAAA,SAAS,EAAE,KAFgB;AAG3BC,EAAAA,KAAK,EAAE;AAHoB,CAA7B;AAMA,MAAMC,aAAa,GAAGd,WAAW,CAAC;AAChCe,EAAAA,IAAI,EAAE,OAD0B;AAEhCC,EAAAA,YAAY,EAAEN,oBAFkB;AAGhCO,EAAAA,aAAa,EAAE;AACb,KAACR,aAAa,CAACS,OAAf,GAAyBhB,aADZ;AAEb,KAACO,aAAa,CAACU,SAAf,GAA2Bf,4BAFd;AAGb,KAACK,aAAa,CAACW,QAAf,GAA0BjB,cAHb;AAKb,KAACI,UAAU,CAACW,OAAZ,GAAsBhB,aALT;AAMb,KAACK,UAAU,CAACY,SAAZ,GAAwBd,yBANX;;AAObgB,IAAAA,OAAO,OAAmB;AAAA,UAAlB;AAAEN,QAAAA,IAAF;AAAQO,QAAAA;AAAR,OAAkB;AACxB,aAAO;AACLC,QAAAA,OAAO,EAAE;AACPR,UAAAA,IADO;AAEPO,UAAAA,MAFO;AAGPE,UAAAA,EAAE,EAAEvB,MAAM;AAHH;AADJ,OAAP;AAOD,KAfY;;AAgBb,KAACM,UAAU,CAACa,QAAZ,GAAuBjB,cAhBV;AAkBb,KAACK,aAAa,CAACU,OAAf,GAAyBhB,aAlBZ;AAmBb,KAACM,aAAa,CAACW,SAAf,GAA2Bb,4BAnBd;AAoBb,KAACE,aAAa,CAACY,QAAf,GAA0BjB;AApBb;AAHiB,CAAD,CAAjC;AA2BA,OAAO,MAAMsB,eAAe,GAAGX,aAAa,CAACY,OAAtC","sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport {\n  handlePending,\n  handleRejected,\n  handleFetchContactsFulfilled,\n  handleAddContactFulfilled,\n  handleDeleteContactFulfilled,\n} from './constants';\nimport { addContact, deleteContact, fetchContacts } from './operations';\n\nconst contactsInitialState = {\n  items: [],\n  isLoading: false,\n  error: null,\n};\n\nconst contactsSlice = createSlice({\n  name: 'items',\n  initialState: contactsInitialState,\n  extraReducers: {\n    [fetchContacts.pending]: handlePending,\n    [fetchContacts.fulfilled]: handleFetchContactsFulfilled,\n    [fetchContacts.rejected]: handleRejected,\n\n    [addContact.pending]: handlePending,\n    [addContact.fulfilled]: handleAddContactFulfilled,\n    prepare({ name, number }) {\n      return {\n        payload: {\n          name,\n          number,\n          id: nanoid(),\n        },\n      };\n    },\n    [addContact.rejected]: handleRejected,\n\n    [deleteContact.pending]: handlePending,\n    [deleteContact.fulfilled]: handleDeleteContactFulfilled,\n    [deleteContact.rejected]: handleRejected,\n  },\n});\n\nexport const contactsReducer = contactsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}