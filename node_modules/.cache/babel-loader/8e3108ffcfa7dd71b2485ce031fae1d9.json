{"ast":null,"code":"import _classCallCheck from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\"; // Stand-alone local day of week\n\nexport var StandAloneLocalDayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(StandAloneLocalDayParser, _Parser);\n\n  var _super = _createSuper(StandAloneLocalDayParser);\n\n  function StandAloneLocalDayParser() {\n    var _this;\n\n    _classCallCheck(this, StandAloneLocalDayParser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", [\"y\", \"R\", \"u\", \"q\", \"Q\", \"M\", \"L\", \"I\", \"d\", \"D\", \"E\", \"i\", \"e\", \"t\", \"T\"]);\n\n    return _this;\n  }\n\n  _createClass(StandAloneLocalDayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case \"c\":\n        case \"cc\":\n          // 03\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n        // 3rd\n\n        case \"co\":\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: \"day\"\n          }), valueCallback);\n        // Tue\n\n        case \"ccc\":\n          return match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\"\n          }) || match.day(dateString, {\n            width: \"short\",\n            context: \"standalone\"\n          }) || match.day(dateString, {\n            width: \"narrow\",\n            context: \"standalone\"\n          });\n        // T\n\n        case \"ccccc\":\n          return match.day(dateString, {\n            width: \"narrow\",\n            context: \"standalone\"\n          });\n        // Tu\n\n        case \"cccccc\":\n          return match.day(dateString, {\n            width: \"short\",\n            context: \"standalone\"\n          }) || match.day(dateString, {\n            width: \"narrow\",\n            context: \"standalone\"\n          });\n        // Tuesday\n\n        case \"cccc\":\n        default:\n          return match.day(dateString, {\n            width: \"wide\",\n            context: \"standalone\"\n          }) || match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\"\n          }) || match.day(dateString, {\n            width: \"short\",\n            context: \"standalone\"\n          }) || match.day(dateString, {\n            width: \"narrow\",\n            context: \"standalone\"\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 6;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      date = setDay(date, value, options);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n\n  return StandAloneLocalDayParser;\n}(Parser);","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.mjs"],"names":["setDay","Parser","mapValue","parseNDigits","StandAloneLocalDayParser","dateString","token","match","options","valueCallback","value","wholeWeekDays","Math","floor","weekStartsOn","length","ordinalNumber","unit","day","width","context","_date","date","_flags","setHours"],"mappings":"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","sourcesContent":["import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}