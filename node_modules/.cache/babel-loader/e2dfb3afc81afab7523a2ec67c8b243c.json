{"ast":null,"code":"import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return match.dayPeriod(dateString, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }) || match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n\n      case \"bbbb\":\n      default:\n        return match.dayPeriod(dateString, {\n          width: \"wide\",\n          context: \"formatting\"\n        }) || match.dayPeriod(dateString, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }) || match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.mjs"],"names":["Parser","dayPeriodEnumToHours","AMPMMidnightParser","priority","parse","dateString","token","match","dayPeriod","width","context","set","date","_flags","value","setHours","incompatibleTokens"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,oBAAT,QAAqC,cAArC;AAEA,OAAO,MAAMC,kBAAN,SAAiCF,MAAjC,CAAwC;AAC7CG,EAAAA,QAAQ,GAAG,EAAH;;AAERC,EAAAA,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;AAC9B,YAAQD,KAAR;AACE,WAAK,GAAL;AACA,WAAK,IAAL;AACA,WAAK,KAAL;AACE,eACEC,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AAC1BI,UAAAA,KAAK,EAAE,aADmB;AAE1BC,UAAAA,OAAO,EAAE;AAFiB,SAA5B,KAIAH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AAC1BI,UAAAA,KAAK,EAAE,QADmB;AAE1BC,UAAAA,OAAO,EAAE;AAFiB,SAA5B,CALF;;AAWF,WAAK,OAAL;AACE,eAAOH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AACjCI,UAAAA,KAAK,EAAE,QAD0B;AAEjCC,UAAAA,OAAO,EAAE;AAFwB,SAA5B,CAAP;;AAIF,WAAK,MAAL;AACA;AACE,eACEH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AAC1BI,UAAAA,KAAK,EAAE,MADmB;AAE1BC,UAAAA,OAAO,EAAE;AAFiB,SAA5B,KAIAH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AAC1BI,UAAAA,KAAK,EAAE,aADmB;AAE1BC,UAAAA,OAAO,EAAE;AAFiB,SAA5B,CAJA,IAQAH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;AAC1BI,UAAAA,KAAK,EAAE,QADmB;AAE1BC,UAAAA,OAAO,EAAE;AAFiB,SAA5B,CATF;AAtBJ;AAqCD;;AAEDC,EAAAA,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,EAAsB;AACvBF,IAAAA,IAAI,CAACG,QAAL,CAAcd,oBAAoB,CAACa,KAAD,CAAlC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD;AACA,WAAOF,IAAP;AACD;;AAEDI,EAAAA,kBAAkB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAAH;AAhD2B","sourcesContent":["import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n"]},"metadata":{},"sourceType":"module"}