{"ast":null,"code":"\"use strict\";\n\nexports.match = void 0;\n\nvar _index = require(\"../../_lib/buildMatchFn.js\");\n\nvar _index2 = require(\"../../_lib/buildMatchPatternFn.js\");\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nconst parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nconst match = exports.match = {\n  ordinalNumber: (0, _index2.buildMatchPatternFn)({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: value => parseInt(value, 10)\n  }),\n  era: (0, _index.buildMatchFn)({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  quarter: (0, _index.buildMatchFn)({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: index => index + 1\n  }),\n  month: (0, _index.buildMatchFn)({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  day: (0, _index.buildMatchFn)({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  dayPeriod: (0, _index.buildMatchFn)({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\"\n  })\n};","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/locale/en-US/_lib/match.js"],"names":["exports","match","_index","require","_index2","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","narrow","abbreviated","wide","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","short","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","am","pm","midnight","noon","morning","afternoon","evening","night","ordinalNumber","buildMatchPatternFn","matchPattern","parsePattern","valueCallback","value","parseInt","era","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","quarter","index","month","day","dayPeriod"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.match = void 0;\n\nvar _index = require(\"../../_lib/buildMatchFn.js\");\nvar _index2 = require(\"../../_lib/buildMatchPatternFn.js\");\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nconst match = (exports.match = {\n  ordinalNumber: (0, _index2.buildMatchPatternFn)({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: (0, _index.buildMatchFn)({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: (0, _index.buildMatchFn)({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: (0, _index.buildMatchFn)({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: (0, _index.buildMatchFn)({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: (0, _index.buildMatchFn)({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n});\n"]},"metadata":{},"sourceType":"script"}