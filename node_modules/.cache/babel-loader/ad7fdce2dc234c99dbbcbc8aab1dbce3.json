{"ast":null,"code":"\"use strict\";\n\nexports.eachWeekendOfInterval = eachWeekendOfInterval;\n\nvar _index = require(\"./eachDayOfInterval.js\");\n\nvar _index2 = require(\"./isWeekend.js\");\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param interval - The given interval\n *\n * @returns An array containing all the Saturdays and Sundays\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * const result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\n\n\nfunction eachWeekendOfInterval(interval) {\n  const dateInterval = (0, _index.eachDayOfInterval)(interval);\n  const weekends = [];\n  let index = 0;\n\n  while (index < dateInterval.length) {\n    const date = dateInterval[index++];\n    if ((0, _index2.isWeekend)(date)) weekends.push(date);\n  }\n\n  return weekends;\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/eachWeekendOfInterval.js"],"names":["exports","eachWeekendOfInterval","_index","require","_index2","interval","dateInterval","eachDayOfInterval","weekends","index","length","date","isWeekend","push"],"mappings":"AAAA;;AACAA,OAAO,CAACC,qBAAR,GAAgCA,qBAAhC;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,qBAAT,CAA+BI,QAA/B,EAAyC;AACvC,QAAMC,YAAY,GAAG,CAAC,GAAGJ,MAAM,CAACK,iBAAX,EAA8BF,QAA9B,CAArB;AACA,QAAMG,QAAQ,GAAG,EAAjB;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,SAAOA,KAAK,GAAGH,YAAY,CAACI,MAA5B,EAAoC;AAClC,UAAMC,IAAI,GAAGL,YAAY,CAACG,KAAK,EAAN,CAAzB;AACA,QAAI,CAAC,GAAGL,OAAO,CAACQ,SAAZ,EAAuBD,IAAvB,CAAJ,EAAkCH,QAAQ,CAACK,IAAT,CAAcF,IAAd;AACnC;;AACD,SAAOH,QAAP;AACD","sourcesContent":["\"use strict\";\nexports.eachWeekendOfInterval = eachWeekendOfInterval;\nvar _index = require(\"./eachDayOfInterval.js\");\nvar _index2 = require(\"./isWeekend.js\");\n\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param interval - The given interval\n *\n * @returns An array containing all the Saturdays and Sundays\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * const result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\nfunction eachWeekendOfInterval(interval) {\n  const dateInterval = (0, _index.eachDayOfInterval)(interval);\n  const weekends = [];\n  let index = 0;\n  while (index < dateInterval.length) {\n    const date = dateInterval[index++];\n    if ((0, _index2.isWeekend)(date)) weekends.push(date);\n  }\n  return weekends;\n}\n"]},"metadata":{},"sourceType":"script"}