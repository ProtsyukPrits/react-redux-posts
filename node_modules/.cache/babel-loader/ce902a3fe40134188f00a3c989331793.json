{"ast":null,"code":"import _classCallCheck from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Parser } from \"../Parser.mjs\";\nexport var EraParser = /*#__PURE__*/function (_Parser) {\n  _inherits(EraParser, _Parser);\n\n  var _super = _createSuper(EraParser);\n\n  function EraParser() {\n    var _this;\n\n    _classCallCheck(this, EraParser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 140);\n\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", [\"R\", \"u\", \"t\", \"T\"]);\n\n    return _this;\n  }\n\n  _createClass(EraParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // AD, BC\n        case \"G\":\n        case \"GG\":\n        case \"GGG\":\n          return match.era(dateString, {\n            width: \"abbreviated\"\n          }) || match.era(dateString, {\n            width: \"narrow\"\n          });\n        // A, B\n\n        case \"GGGGG\":\n          return match.era(dateString, {\n            width: \"narrow\"\n          });\n        // Anno Domini, Before Christ\n\n        case \"GGGG\":\n        default:\n          return match.era(dateString, {\n            width: \"wide\"\n          }) || match.era(dateString, {\n            width: \"abbreviated\"\n          }) || match.era(dateString, {\n            width: \"narrow\"\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      flags.era = value;\n      date.setFullYear(value, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n\n  return EraParser;\n}(Parser);","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/parse/_lib/parsers/EraParser.mjs"],"names":["Parser","EraParser","dateString","token","match","era","width","date","flags","value","setFullYear","setHours"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AAEA,WAAaC,SAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,+DACa,GADb;;AAAA,yEAmCuB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAnCvB;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAGE,eAAMC,UAAN,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgC;AAC9B,cAAQD,KAAR;AACE;AACA,aAAK,GAAL;AACA,aAAK,IAAL;AACA,aAAK,KAAL;AACE,iBACEC,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAtB,KACAF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAtB,CAFF;AAKF;;AACA,aAAK,OAAL;AACE,iBAAOF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAtB,CAAP;AACF;;AACA,aAAK,MAAL;AACA;AACE,iBACEF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAtB,KACAF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAtB,CADA,IAEAF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAtB,CAHF;AAhBJ;AAsBD;AA1BH;AAAA;AAAA,WA4BE,aAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACtBD,MAAAA,KAAK,CAACH,GAAN,GAAYI,KAAZ;AACAF,MAAAA,IAAI,CAACG,WAAL,CAAiBD,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B;AACAF,MAAAA,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,aAAOJ,IAAP;AACD;AAjCH;;AAAA;AAAA,EAA+BP,MAA/B","sourcesContent":["import { Parser } from \"../Parser.mjs\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n"]},"metadata":{},"sourceType":"module"}