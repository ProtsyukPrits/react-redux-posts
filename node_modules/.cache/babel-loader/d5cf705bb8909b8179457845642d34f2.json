{"ast":null,"code":"\"use strict\";\n\nexports.milliseconds = milliseconds;\n\nvar _index = require(\"./constants.js\");\n/**\n * @name milliseconds\n * @category Millisecond Helpers\n * @summary\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * @description\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * One month is a year divided by 12.\n *\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\n *\n * @returns The milliseconds\n *\n * @example\n * // 1 year in milliseconds\n * milliseconds({ years: 1 })\n * //=> 31556952000\n *\n * // 3 months in milliseconds\n * milliseconds({ months: 3 })\n * //=> 7889238000\n */\n\n\nfunction milliseconds(_ref) {\n  let {\n    years,\n    months,\n    weeks,\n    days,\n    hours,\n    minutes,\n    seconds\n  } = _ref;\n  let totalDays = 0;\n  if (years) totalDays += years * _index.daysInYear;\n  if (months) totalDays += months * (_index.daysInYear / 12);\n  if (weeks) totalDays += weeks * 7;\n  if (days) totalDays += days;\n  let totalSeconds = totalDays * 24 * 60 * 60;\n  if (hours) totalSeconds += hours * 60 * 60;\n  if (minutes) totalSeconds += minutes * 60;\n  if (seconds) totalSeconds += seconds;\n  return Math.trunc(totalSeconds * 1000);\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/milliseconds.js"],"names":["exports","milliseconds","_index","require","years","months","weeks","days","hours","minutes","seconds","totalDays","daysInYear","totalSeconds","Math","trunc"],"mappings":"AAAA;;AACAA,OAAO,CAACC,YAAR,GAAuBA,YAAvB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,YAAT,OAA+E;AAAA,MAAzD;AAAEG,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,OAArC;AAA8CC,IAAAA;AAA9C,GAAyD;AAC7E,MAAIC,SAAS,GAAG,CAAhB;AAEA,MAAIP,KAAJ,EAAWO,SAAS,IAAIP,KAAK,GAAGF,MAAM,CAACU,UAA5B;AACX,MAAIP,MAAJ,EAAYM,SAAS,IAAIN,MAAM,IAAIH,MAAM,CAACU,UAAP,GAAoB,EAAxB,CAAnB;AACZ,MAAIN,KAAJ,EAAWK,SAAS,IAAIL,KAAK,GAAG,CAArB;AACX,MAAIC,IAAJ,EAAUI,SAAS,IAAIJ,IAAb;AAEV,MAAIM,YAAY,GAAGF,SAAS,GAAG,EAAZ,GAAiB,EAAjB,GAAsB,EAAzC;AAEA,MAAIH,KAAJ,EAAWK,YAAY,IAAIL,KAAK,GAAG,EAAR,GAAa,EAA7B;AACX,MAAIC,OAAJ,EAAaI,YAAY,IAAIJ,OAAO,GAAG,EAA1B;AACb,MAAIC,OAAJ,EAAaG,YAAY,IAAIH,OAAhB;AAEb,SAAOI,IAAI,CAACC,KAAL,CAAWF,YAAY,GAAG,IAA1B,CAAP;AACD","sourcesContent":["\"use strict\";\nexports.milliseconds = milliseconds;\nvar _index = require(\"./constants.js\");\n\n/**\n * @name milliseconds\n * @category Millisecond Helpers\n * @summary\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * @description\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * One month is a year divided by 12.\n *\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\n *\n * @returns The milliseconds\n *\n * @example\n * // 1 year in milliseconds\n * milliseconds({ years: 1 })\n * //=> 31556952000\n *\n * // 3 months in milliseconds\n * milliseconds({ months: 3 })\n * //=> 7889238000\n */\nfunction milliseconds({ years, months, weeks, days, hours, minutes, seconds }) {\n  let totalDays = 0;\n\n  if (years) totalDays += years * _index.daysInYear;\n  if (months) totalDays += months * (_index.daysInYear / 12);\n  if (weeks) totalDays += weeks * 7;\n  if (days) totalDays += days;\n\n  let totalSeconds = totalDays * 24 * 60 * 60;\n\n  if (hours) totalSeconds += hours * 60 * 60;\n  if (minutes) totalSeconds += minutes * 60;\n  if (seconds) totalSeconds += seconds;\n\n  return Math.trunc(totalSeconds * 1000);\n}\n"]},"metadata":{},"sourceType":"script"}