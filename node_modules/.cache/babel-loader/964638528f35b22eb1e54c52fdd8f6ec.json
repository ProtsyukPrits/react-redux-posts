{"ast":null,"code":"\"use strict\";\n\nexports.ExtendedYearParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass ExtendedYearParser extends _Parser.Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return (0, _utils.parseNDigitsSigned)(4, dateString);\n    }\n\n    return (0, _utils.parseNDigitsSigned)(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n\nexports.ExtendedYearParser = ExtendedYearParser;","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js"],"names":["exports","ExtendedYearParser","_Parser","require","_utils","Parser","priority","parse","dateString","token","parseNDigitsSigned","length","set","date","_flags","value","setFullYear","setHours","incompatibleTokens"],"mappings":"AAAA;;AACAA,OAAO,CAACC,kBAAR,GAA6B,KAAK,CAAlC;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAApB;;AAEA,MAAMF,kBAAN,SAAiCC,OAAO,CAACG,MAAzC,CAAgD;AAC9CC,EAAAA,QAAQ,GAAG,GAAH;;AAERC,EAAAA,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoB;AACvB,QAAIA,KAAK,KAAK,GAAd,EAAmB;AACjB,aAAO,CAAC,GAAGL,MAAM,CAACM,kBAAX,EAA+B,CAA/B,EAAkCF,UAAlC,CAAP;AACD;;AAED,WAAO,CAAC,GAAGJ,MAAM,CAACM,kBAAX,EAA+BD,KAAK,CAACE,MAArC,EAA6CH,UAA7C,CAAP;AACD;;AAEDI,EAAAA,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,EAAsB;AACvBF,IAAAA,IAAI,CAACG,WAAL,CAAiBD,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B;AACAF,IAAAA,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,WAAOJ,IAAP;AACD;;AAEDK,EAAAA,kBAAkB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,CAAH;AAjB4B;;AAmBhDlB,OAAO,CAACC,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\nexports.ExtendedYearParser = void 0;\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass ExtendedYearParser extends _Parser.Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return (0, _utils.parseNDigitsSigned)(4, dateString);\n    }\n\n    return (0, _utils.parseNDigitsSigned)(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\nexports.ExtendedYearParser = ExtendedYearParser;\n"]},"metadata":{},"sourceType":"script"}