{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth/slice';\nimport { contactsReducer } from './contacts/contactsSlice';\nimport { filtringReducer } from './contacts/filterSlice';\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n})]; // Persisting token field from auth slice to localstorage\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token']\n};\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n    filter: filtringReducer\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development'\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","authReducer","contactsReducer","filtringReducer","middleware","serializableCheck","ignoredActions","authPersistConfig","key","whitelist","store","reducer","auth","contacts","filter","devTools","process","env","NODE_ENV","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,MAAMC,UAAU,GAAG,CACjB,GAAGb,oBAAoB,CAAC;AACtBc,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,cAAc,EAAE,CAACZ,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADG,CAAD,CADN,CAAnB,C,CAQA;;AACA,MAAMQ,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAE,MADmB;AAExBR,EAAAA,OAFwB;AAGxBS,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHa,CAA1B;AAMA,OAAO,MAAMC,KAAK,GAAGpB,cAAc,CAAC;AAClCqB,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEnB,cAAc,CAACc,iBAAD,EAAoBN,WAApB,CADb;AAEPY,IAAAA,QAAQ,EAAEX,eAFH;AAGPY,IAAAA,MAAM,EAAEX;AAHD,GADyB;AAMlCC,EAAAA,UANkC;AAOlCW,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAPD,CAAD,CAA5B;AAUP,OAAO,MAAMC,SAAS,GAAG3B,YAAY,CAACkB,KAAD,CAA9B","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth/slice';\nimport { contactsReducer } from './contacts/contactsSlice';\nimport { filtringReducer } from './contacts/filterSlice';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\n// Persisting token field from auth slice to localstorage\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n    filter: filtringReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n\n"]},"metadata":{},"sourceType":"module"}