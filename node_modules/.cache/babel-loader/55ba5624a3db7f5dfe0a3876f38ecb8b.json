{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { refresh, logIn, logOut, register } from './operations';\nconst initialState = {\n  user: {\n    name: null,\n    email: null\n  },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n\n    [logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n\n    [logOut.fulfilled](state) {\n      state.user = {\n        name: null,\n        email: null\n      };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n\n    [refresh.pending](state) {\n      state.isRefreshing = true;\n    },\n\n    [refresh.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isRefreshing = false;\n    },\n\n    [refresh.rejected](state) {\n      state.isRefreshing = false;\n    }\n\n  }\n});\nexport const authReducer = authSlice.reducer;","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/src/redux/auth/slice.js"],"names":["createSlice","refresh","logIn","logOut","register","initialState","user","name","email","token","isLoggedIn","isRefreshing","authSlice","extraReducers","fulfilled","state","action","payload","pending","rejected","authReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,QAAjC,QAAiD,cAAjD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,KAAK,EAAE;AAArB,GADa;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,UAAU,EAAE,KAHO;AAInBC,EAAAA,YAAY,EAAE;AAJK,CAArB;AAOA,MAAMC,SAAS,GAAGZ,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,MADsB;AAE5BF,EAAAA,YAF4B;AAG5BQ,EAAAA,aAAa,EAAE;AACb,KAACT,QAAQ,CAACU,SAAV,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClCD,MAAAA,KAAK,CAACT,IAAN,GAAaU,MAAM,CAACC,OAAP,CAAeX,IAA5B;AACAS,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAAP,CAAeR,KAA7B;AACAM,MAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACD,KALY;;AAOb,KAACR,KAAK,CAACY,SAAP,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAC/BD,MAAAA,KAAK,CAACT,IAAN,GAAaU,MAAM,CAACC,OAAP,CAAeX,IAA5B;AACAS,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAAP,CAAeR,KAA7B;AACAM,MAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACD,KAXY;;AAYb,KAACP,MAAM,CAACW,SAAR,EAAmBC,KAAnB,EAA0B;AACxBA,MAAAA,KAAK,CAACT,IAAN,GAAa;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAAb;AACEO,MAAAA,KAAK,CAACN,KAAN,GAAc,IAAd;AACAM,MAAAA,KAAK,CAACL,UAAN,GAAmB,KAAnB;AACH,KAhBY;;AAiBb,KAACT,OAAO,CAACiB,OAAT,EAAkBH,KAAlB,EAAyB;AACvBA,MAAAA,KAAK,CAACJ,YAAN,GAAqB,IAArB;AACD,KAnBY;;AAoBb,KAACV,OAAO,CAACa,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmC;AACjCD,MAAAA,KAAK,CAACT,IAAN,GAAaU,MAAM,CAACC,OAApB;AACAF,MAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACAK,MAAAA,KAAK,CAACJ,YAAN,GAAqB,KAArB;AACD,KAxBY;;AAyBb,KAACV,OAAO,CAACkB,QAAT,EAAmBJ,KAAnB,EAA0B;AACxBA,MAAAA,KAAK,CAACJ,YAAN,GAAqB,KAArB;AACD;;AA3BY;AAHa,CAAD,CAA7B;AAmCA,OAAO,MAAMS,WAAW,GAAGR,SAAS,CAACS,OAA9B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { refresh, logIn, logOut, register } from './operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n\n    [logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n        state.token = null;\n        state.isLoggedIn = false;\n    },\n    [refresh.pending](state) {\n      state.isRefreshing = true;\n    },\n    [refresh.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isRefreshing = false;\n    },\n    [refresh.rejected](state) {\n      state.isRefreshing = false;\n    }\n  },\n});\n\n\nexport const authReducer = authSlice.reducer;"]},"metadata":{},"sourceType":"module"}