{"ast":null,"code":"\"use strict\";\n\nexports.min = min;\n\nvar _index = require(\"./toDate.js\");\n/**\n * @name min\n * @category Common Helpers\n * @summary Returns the earliest of the given dates.\n *\n * @description\n * Returns the earliest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dates - The dates to compare\n *\n * @returns The earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * const result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\n\n\nfunction min(dates) {\n  let result;\n  dates.forEach(dirtyDate => {\n    const date = (0, _index.toDate)(dirtyDate);\n\n    if (!result || result > date || isNaN(+date)) {\n      result = date;\n    }\n  });\n  return result || new Date(NaN);\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/min.js"],"names":["exports","min","_index","require","dates","result","forEach","dirtyDate","date","toDate","isNaN","Date","NaN"],"mappings":"AAAA;;AACAA,OAAO,CAACC,GAAR,GAAcA,GAAd;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAClB,MAAIC,MAAJ;AAEAD,EAAAA,KAAK,CAACE,OAAN,CAAeC,SAAD,IAAe;AAC3B,UAAMC,IAAI,GAAG,CAAC,GAAGN,MAAM,CAACO,MAAX,EAAmBF,SAAnB,CAAb;;AACA,QAAI,CAACF,MAAD,IAAWA,MAAM,GAAGG,IAApB,IAA4BE,KAAK,CAAC,CAACF,IAAF,CAArC,EAA8C;AAC5CH,MAAAA,MAAM,GAAGG,IAAT;AACD;AACF,GALD;AAOA,SAAOH,MAAM,IAAI,IAAIM,IAAJ,CAASC,GAAT,CAAjB;AACD","sourcesContent":["\"use strict\";\nexports.min = min;\nvar _index = require(\"./toDate.js\");\n\n/**\n * @name min\n * @category Common Helpers\n * @summary Returns the earliest of the given dates.\n *\n * @description\n * Returns the earliest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dates - The dates to compare\n *\n * @returns The earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * const result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\nfunction min(dates) {\n  let result;\n\n  dates.forEach((dirtyDate) => {\n    const date = (0, _index.toDate)(dirtyDate);\n    if (!result || result > date || isNaN(+date)) {\n      result = date;\n    }\n  });\n\n  return result || new Date(NaN);\n}\n"]},"metadata":{},"sourceType":"script"}