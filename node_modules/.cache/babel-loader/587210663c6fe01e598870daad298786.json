{"ast":null,"code":"\"use strict\";\n\nexports.lastDayOfISOWeekYear = lastDayOfISOWeekYear;\n\nvar _index = require(\"./getISOWeekYear.js\");\n\nvar _index2 = require(\"./startOfISOWeek.js\");\n\nvar _index3 = require(\"./constructFrom.js\");\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of an ISO week-numbering year\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * const result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\n\n\nfunction lastDayOfISOWeekYear(date) {\n  const year = (0, _index.getISOWeekYear)(date);\n  const fourthOfJanuary = (0, _index3.constructFrom)(date, 0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n\n  const _date = (0, _index2.startOfISOWeek)(fourthOfJanuary);\n\n  _date.setDate(_date.getDate() - 1);\n\n  return _date;\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/lastDayOfISOWeekYear.js"],"names":["exports","lastDayOfISOWeekYear","_index","require","_index2","_index3","date","year","getISOWeekYear","fourthOfJanuary","constructFrom","setFullYear","setHours","_date","startOfISOWeek","setDate","getDate"],"mappings":"AAAA;;AACAA,OAAO,CAACC,oBAAR,GAA+BA,oBAA/B;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,qBAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,oBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,oBAAT,CAA8BK,IAA9B,EAAoC;AAClC,QAAMC,IAAI,GAAG,CAAC,GAAGL,MAAM,CAACM,cAAX,EAA2BF,IAA3B,CAAb;AACA,QAAMG,eAAe,GAAG,CAAC,GAAGJ,OAAO,CAACK,aAAZ,EAA2BJ,IAA3B,EAAiC,CAAjC,CAAxB;AACAG,EAAAA,eAAe,CAACE,WAAhB,CAA4BJ,IAAI,GAAG,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC;AACAE,EAAAA,eAAe,CAACG,QAAhB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;;AACA,QAAMC,KAAK,GAAG,CAAC,GAAGT,OAAO,CAACU,cAAZ,EAA4BL,eAA5B,CAAd;;AACAI,EAAAA,KAAK,CAACE,OAAN,CAAcF,KAAK,CAACG,OAAN,KAAkB,CAAhC;;AACA,SAAOH,KAAP;AACD","sourcesContent":["\"use strict\";\nexports.lastDayOfISOWeekYear = lastDayOfISOWeekYear;\nvar _index = require(\"./getISOWeekYear.js\");\nvar _index2 = require(\"./startOfISOWeek.js\");\nvar _index3 = require(\"./constructFrom.js\");\n\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of an ISO week-numbering year\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * const result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\nfunction lastDayOfISOWeekYear(date) {\n  const year = (0, _index.getISOWeekYear)(date);\n  const fourthOfJanuary = (0, _index3.constructFrom)(date, 0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  const _date = (0, _index2.startOfISOWeek)(fourthOfJanuary);\n  _date.setDate(_date.getDate() - 1);\n  return _date;\n}\n"]},"metadata":{},"sourceType":"script"}