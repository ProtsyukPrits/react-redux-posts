{"ast":null,"code":"\"use strict\";\n\nexports.endOfISOWeekYear = endOfISOWeekYear;\n\nvar _index = require(\"./getISOWeekYear.js\");\n\nvar _index2 = require(\"./startOfISOWeek.js\");\n\nvar _index3 = require(\"./constructFrom.js\");\n/**\n * @name endOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of an ISO week-numbering year\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * const result = endOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\n\n\nfunction endOfISOWeekYear(date) {\n  const year = (0, _index.getISOWeekYear)(date);\n  const fourthOfJanuaryOfNextYear = (0, _index3.constructFrom)(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n\n  const _date = (0, _index2.startOfISOWeek)(fourthOfJanuaryOfNextYear);\n\n  _date.setMilliseconds(_date.getMilliseconds() - 1);\n\n  return _date;\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/endOfISOWeekYear.js"],"names":["exports","endOfISOWeekYear","_index","require","_index2","_index3","date","year","getISOWeekYear","fourthOfJanuaryOfNextYear","constructFrom","setFullYear","setHours","_date","startOfISOWeek","setMilliseconds","getMilliseconds"],"mappings":"AAAA;;AACAA,OAAO,CAACC,gBAAR,GAA2BA,gBAA3B;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,qBAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,oBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,gBAAT,CAA0BK,IAA1B,EAAgC;AAC9B,QAAMC,IAAI,GAAG,CAAC,GAAGL,MAAM,CAACM,cAAX,EAA2BF,IAA3B,CAAb;AACA,QAAMG,yBAAyB,GAAG,CAAC,GAAGJ,OAAO,CAACK,aAAZ,EAA2BJ,IAA3B,EAAiC,CAAjC,CAAlC;AACAG,EAAAA,yBAAyB,CAACE,WAA1B,CAAsCJ,IAAI,GAAG,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD;AACAE,EAAAA,yBAAyB,CAACG,QAA1B,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C;;AACA,QAAMC,KAAK,GAAG,CAAC,GAAGT,OAAO,CAACU,cAAZ,EAA4BL,yBAA5B,CAAd;;AACAI,EAAAA,KAAK,CAACE,eAAN,CAAsBF,KAAK,CAACG,eAAN,KAA0B,CAAhD;;AACA,SAAOH,KAAP;AACD","sourcesContent":["\"use strict\";\nexports.endOfISOWeekYear = endOfISOWeekYear;\nvar _index = require(\"./getISOWeekYear.js\");\nvar _index2 = require(\"./startOfISOWeek.js\");\nvar _index3 = require(\"./constructFrom.js\");\n\n/**\n * @name endOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of an ISO week-numbering year\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * const result = endOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\nfunction endOfISOWeekYear(date) {\n  const year = (0, _index.getISOWeekYear)(date);\n  const fourthOfJanuaryOfNextYear = (0, _index3.constructFrom)(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const _date = (0, _index2.startOfISOWeek)(fourthOfJanuaryOfNextYear);\n  _date.setMilliseconds(_date.getMilliseconds() - 1);\n  return _date;\n}\n"]},"metadata":{},"sourceType":"script"}