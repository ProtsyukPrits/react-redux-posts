{"ast":null,"code":"import _slicedToArray from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _classCallCheck from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/dmytro/react-redux-posts/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"transition\", \"transitionEnd\"];\nimport { useState, useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../render/utils/setters.mjs';\nimport { animateVisualElement } from '../render/utils/animation.mjs';\nimport { makeUseVisualState } from '../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { VisualElement } from '../render/VisualElement.mjs';\n\nvar createObject = function createObject() {\n  return {};\n};\n\nvar StateVisualElement = /*#__PURE__*/function (_VisualElement) {\n  _inherits(StateVisualElement, _VisualElement);\n\n  var _super = _createSuper(StateVisualElement);\n\n  function StateVisualElement() {\n    _classCallCheck(this, StateVisualElement);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StateVisualElement, [{\n    key: \"build\",\n    value: function build() {}\n  }, {\n    key: \"measureInstanceViewportBox\",\n    value: function measureInstanceViewportBox() {\n      return createBox();\n    }\n  }, {\n    key: \"resetTransform\",\n    value: function resetTransform() {}\n  }, {\n    key: \"restoreTransform\",\n    value: function restoreTransform() {}\n  }, {\n    key: \"removeValueFromRenderState\",\n    value: function removeValueFromRenderState() {}\n  }, {\n    key: \"renderInstance\",\n    value: function renderInstance() {}\n  }, {\n    key: \"scrapeMotionValuesFromProps\",\n    value: function scrapeMotionValuesFromProps() {\n      return createObject();\n    }\n  }, {\n    key: \"getBaseTargetFromProps\",\n    value: function getBaseTargetFromProps() {\n      return undefined;\n    }\n  }, {\n    key: \"readValueFromInstance\",\n    value: function readValueFromInstance(_state, key, options) {\n      return options.initialState[key] || 0;\n    }\n  }, {\n    key: \"sortInstanceNodePosition\",\n    value: function sortInstanceNodePosition() {\n      return 0;\n    }\n  }, {\n    key: \"makeTargetAnimatableFromInstance\",\n    value: function makeTargetAnimatableFromInstance(_ref) {\n      var transition = _ref.transition,\n          transitionEnd = _ref.transitionEnd,\n          target = _objectWithoutProperties(_ref, _excluded);\n\n      var origin = getOrigin(target, transition || {}, this);\n      checkTargetForNewValues(this, target, origin);\n      return _objectSpread({\n        transition: transition,\n        transitionEnd: transitionEnd\n      }, target);\n    }\n  }]);\n\n  return StateVisualElement;\n}(VisualElement);\n\nvar useVisualState = makeUseVisualState({\n  scrapeMotionValuesFromProps: createObject,\n  createRenderState: createObject\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\n\nfunction useAnimatedState(initialState) {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      animationState = _useState2[0],\n      setAnimationState = _useState2[1];\n\n  var visualState = useVisualState({}, false);\n  var element = useConstant(function () {\n    return new StateVisualElement({\n      props: {},\n      visualState: visualState\n    }, {\n      initialState: initialState\n    });\n  });\n  useEffect(function () {\n    element.mount({});\n    return function () {\n      return element.unmount();\n    };\n  }, [element]);\n  useEffect(function () {\n    element.setProps({\n      onUpdate: function onUpdate(v) {\n        setAnimationState(_objectSpread({}, v));\n      }\n    });\n  }, [setAnimationState, element]);\n  var startAnimation = useConstant(function () {\n    return function (animationDefinition) {\n      return animateVisualElement(element, animationDefinition);\n    };\n  });\n  return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/framer-motion/dist/es/animation/use-animated-state.mjs"],"names":["useState","useEffect","useConstant","getOrigin","checkTargetForNewValues","animateVisualElement","makeUseVisualState","createBox","VisualElement","createObject","StateVisualElement","undefined","_state","key","options","initialState","transition","transitionEnd","target","origin","useVisualState","scrapeMotionValuesFromProps","createRenderState","useAnimatedState","animationState","setAnimationState","visualState","element","props","mount","unmount","setProps","onUpdate","v","startAnimation","animationDefinition"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../render/utils/setters.mjs';\nimport { animateVisualElement } from '../render/utils/animation.mjs';\nimport { makeUseVisualState } from '../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { VisualElement } from '../render/VisualElement.mjs';\n\nconst createObject = () => ({});\nclass StateVisualElement extends VisualElement {\n    build() { }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    resetTransform() { }\n    restoreTransform() { }\n    removeValueFromRenderState() { }\n    renderInstance() { }\n    scrapeMotionValuesFromProps() {\n        return createObject();\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    readValueFromInstance(_state, key, options) {\n        return options.initialState[key] || 0;\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }) {\n        const origin = getOrigin(target, transition || {}, this);\n        checkTargetForNewValues(this, target, origin);\n        return { transition, transitionEnd, ...target };\n    }\n}\nconst useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n    const [animationState, setAnimationState] = useState(initialState);\n    const visualState = useVisualState({}, false);\n    const element = useConstant(() => {\n        return new StateVisualElement({ props: {}, visualState }, { initialState });\n    });\n    useEffect(() => {\n        element.mount({});\n        return () => element.unmount();\n    }, [element]);\n    useEffect(() => {\n        element.setProps({\n            onUpdate: (v) => {\n                setAnimationState({ ...v });\n            },\n        });\n    }, [setAnimationState, element]);\n    const startAnimation = useConstant(() => (animationDefinition) => {\n        return animateVisualElement(element, animationDefinition);\n    });\n    return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };\n"]},"metadata":{},"sourceType":"module"}