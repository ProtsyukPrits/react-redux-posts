{"ast":null,"code":"\"use strict\";\n\nexports.differenceInYears = differenceInYears;\n\nvar _index = require(\"./compareAsc.js\");\n\nvar _index2 = require(\"./differenceInCalendarYears.js\");\n\nvar _index3 = require(\"./toDate.js\");\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\n\nfunction differenceInYears(dateLeft, dateRight) {\n  const _dateLeft = (0, _index3.toDate)(dateLeft);\n\n  const _dateRight = (0, _index3.toDate)(dateRight);\n\n  const sign = (0, _index.compareAsc)(_dateLeft, _dateRight);\n  const difference = Math.abs((0, _index2.differenceInCalendarYears)(_dateLeft, _dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  _dateLeft.setFullYear(1584);\n\n  _dateRight.setFullYear(1584); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n\n  const isLastYearNotFull = (0, _index.compareAsc)(_dateLeft, _dateRight) === -sign;\n  const result = sign * (difference - +isLastYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","map":{"version":3,"sources":["/home/dmytro/react-redux-posts/node_modules/date-fns/differenceInYears.js"],"names":["exports","differenceInYears","_index","require","_index2","_index3","dateLeft","dateRight","_dateLeft","toDate","_dateRight","sign","compareAsc","difference","Math","abs","differenceInCalendarYears","setFullYear","isLastYearNotFull","result"],"mappings":"AAAA;;AACAA,OAAO,CAACC,iBAAR,GAA4BA,iBAA5B;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,gCAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,aAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,iBAAT,CAA2BK,QAA3B,EAAqCC,SAArC,EAAgD;AAC9C,QAAMC,SAAS,GAAG,CAAC,GAAGH,OAAO,CAACI,MAAZ,EAAoBH,QAApB,CAAlB;;AACA,QAAMI,UAAU,GAAG,CAAC,GAAGL,OAAO,CAACI,MAAZ,EAAoBF,SAApB,CAAnB;;AAEA,QAAMI,IAAI,GAAG,CAAC,GAAGT,MAAM,CAACU,UAAX,EAAuBJ,SAAvB,EAAkCE,UAAlC,CAAb;AACA,QAAMG,UAAU,GAAGC,IAAI,CAACC,GAAL,CACjB,CAAC,GAAGX,OAAO,CAACY,yBAAZ,EAAuCR,SAAvC,EAAkDE,UAAlD,CADiB,CAAnB,CAL8C,CAS9C;AACA;;AACAF,EAAAA,SAAS,CAACS,WAAV,CAAsB,IAAtB;;AACAP,EAAAA,UAAU,CAACO,WAAX,CAAuB,IAAvB,EAZ8C,CAc9C;AACA;;;AACA,QAAMC,iBAAiB,GACrB,CAAC,GAAGhB,MAAM,CAACU,UAAX,EAAuBJ,SAAvB,EAAkCE,UAAlC,MAAkD,CAACC,IADrD;AAEA,QAAMQ,MAAM,GAAGR,IAAI,IAAIE,UAAU,GAAG,CAACK,iBAAlB,CAAnB,CAlB8C,CAoB9C;;AACA,SAAOC,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;AACD","sourcesContent":["\"use strict\";\nexports.differenceInYears = differenceInYears;\nvar _index = require(\"./compareAsc.js\");\nvar _index2 = require(\"./differenceInCalendarYears.js\");\nvar _index3 = require(\"./toDate.js\");\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nfunction differenceInYears(dateLeft, dateRight) {\n  const _dateLeft = (0, _index3.toDate)(dateLeft);\n  const _dateRight = (0, _index3.toDate)(dateRight);\n\n  const sign = (0, _index.compareAsc)(_dateLeft, _dateRight);\n  const difference = Math.abs(\n    (0, _index2.differenceInCalendarYears)(_dateLeft, _dateRight),\n  );\n\n  // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n  _dateLeft.setFullYear(1584);\n  _dateRight.setFullYear(1584);\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastYearNotFull =\n    (0, _index.compareAsc)(_dateLeft, _dateRight) === -sign;\n  const result = sign * (difference - +isLastYearNotFull);\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n"]},"metadata":{},"sourceType":"script"}